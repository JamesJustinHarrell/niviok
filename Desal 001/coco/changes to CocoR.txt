These are the changes I made to Coco/R to suit my needs.

replaced line 528 of Parser.cs
	if (sym == null) { //xxx new stuff here
		sym = tab.NewSym(Node.t, name, t.line);
		sym.tokenKind = Symbol.litToken;
		tab.literals[name] = sym;
	}

inserted before line 168 of ParserGen.cs
	if( sym.name[0] == '"' ) //xxx new code here
		gen.Write("la.val == {0}", sym.name);
	else

inserted before line 215 of ParserGen.cs
	else if (p.sym.name[0] == '"') //xxx new code here
		gen.WriteLine("ExpectLiteral({0}, {1});", p.sym.name, p.sym.n);

added to Parser.frame
	void ExpectLiteral (string text, int n) {
		if (la.val==text) Get(); else { SynErr(n); }
	}

change line 165 of ParserGen.cs from
	else if (n <= maxTerm)
to
	else

remove lines 176 and 177 from ParserGen.cs
	else
		gen.Write("StartOf({0})", NewCondSet(s));

modifier Parser::SynErr in Parser.frame
	if (errDist >= minErrDist) {
		errors.SynErr(la.line, la.col, n);
		errors.errorStream.WriteLine(
			"(t.kind={0} t.val={1} la.kind={2} la.val={3})",
			t.kind, t.val, la.kind, la.val );
	}

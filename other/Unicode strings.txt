Unicode defines a large number of code points. These code points can be represented, or encoded, through several different means. Code points are grouped into planes, 655536 in each. Unicode defines 17 planes, 0 through 16.

UTF-16 is a variable-width encoding of Unicode. Each code point is represented by one or two 16-bit unsigned integers. A single 16-bit unsigned integer is only large enough to represent code points in the Basic Multilingual Plane (BMP), or plane 0.  To represent code points outside the BMP, two 16-bit unsigned integers are used, and each is known as a surrogate. For code points in the BMP, the value of the 16-bit unsigned integer is equal to the value of the code point.

In many languages (Java, JavaScript, .NET), strings are encoded using UTF-16, and there is no abstraction over this encoding choice. The lenth/size of a string is the number of 16-bit unsigned integers used to encode the string, not the actual number of code points. Getting a character at a certain index returns a 16-bit unsigned integer, which may be a meaningful code point or may be a surrogate.

Surrogates are NOT meaningful Unicode code points. Surrogates have NO MEANING other than being reserved for UTF-16. If you are working directly with surrogates, you are not working with Unicode code points. You are working with UTF-16.

Why should programmers have to know how a language's string type is implemented? It shouldn't matter whether the encoding is UTF-8, UTF-16, UTF-32, or something else. A Unicode string is a Unicode string, and how it's implemented should be abstracted over.

Because Desal is all about separating interface from implemenation, it demands a better abstraction. Desal does not specify any particular means of encoding Unicode strings. It only demands that whatever means is used does not affect the interface used to interact with it. In Desal, a Unicode string is finally a Unicode string.

In C#
	System.Console.WriteLine( "ðŸ¿° Hello, World ðŸ¿±".Length );
outputs 18, while in Desal
	println( "ðŸ¿° Hello, World ðŸ¿±".length )
outputs 16.

<?xml version="1.0" encoding="utf-8"?>
<bundle xmlns="urn:desible1">
	<inline-plane>
		<declare-first>
			<identifier label="name">header</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<parameter>
					<direction>IN</direction>
					<nullable-type>
						<boolean label="nullable">False</boolean>
					</nullable-type>
					<identifier label="name">title</identifier>
					<boolean label="has-default-value">False</boolean>
				</parameter>
				<block label="body">
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<string label="value">
							</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<call label="value">
								<extract-member label="receiver">
									<identifier label="source">title</identifier>
									<identifier label="member-name">concat</identifier>
								</extract-member>
								<argument>
									<string label="value"> :</string>
								</argument>
							</call>
						</argument>
					</call>
				</block>
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">headerize</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<parameter>
					<direction>IN</direction>
					<nullable-type>
						<boolean label="nullable">False</boolean>
					</nullable-type>
					<identifier label="name">title</identifier>
					<boolean label="has-default-value">False</boolean>
				</parameter>
				<parameter>
					<direction>IN</direction>
					<nullable-type>
						<boolean label="nullable">False</boolean>
					</nullable-type>
					<identifier label="name">function</identifier>
					<boolean label="has-default-value">False</boolean>
				</parameter>
				<block label="body">
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<call label="value">
								<extract-member label="receiver">
									<string label="source">calling </string>
									<identifier label="member-name">concat</identifier>
								</extract-member>
								<argument>
									<identifier label="value">title</identifier>
								</argument>
							</call>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">function</identifier>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<string label="value">
							</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<call label="value">
								<extract-member label="receiver">
									<string label="source">done with </string>
									<identifier label="member-name">concat</identifier>
								</extract-member>
								<argument>
									<identifier label="value">title</identifier>
								</argument>
							</call>
						</argument>
					</call>
				</block>
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">main</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<block label="body">
					<call label="member">
						<identifier label="receiver">headerize</identifier>
						<argument>
							<string label="value">doStuff</string>
						</argument>
						<argument>
							<identifier label="value">doStuff</identifier>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">headerize</identifier>
						<argument>
							<string label="value">testNonProducers</string>
						</argument>
						<argument>
							<identifier label="value">testNonProducers</identifier>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">headerize</identifier>
						<argument>
							<string label="value">testSometimesProducers</string>
						</argument>
						<argument>
							<identifier label="value">testSometimesProducers</identifier>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">headerize</identifier>
						<argument>
							<string label="value">testAlwaysProducers</string>
						</argument>
						<argument>
							<identifier label="value">testAlwaysProducers</identifier>
						</argument>
					</call>
				</block>
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">doStuff</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<block label="body">
					<possibility label="member">
						<identifier label="test">true</identifier>
						<block label="result">
							<call label="member">
								<identifier label="receiver">println</identifier>
								<argument>
									<string label="value">this is a test</string>
								</argument>
							</call>
						</block>
					</possibility>
					<declare-assign label="member">
						<identifier label="name">str</identifier>
						<identikey-type>
							<identikey-category>TYPED</identikey-category>
							<nullable-type>
								<identifier label="interface">String</identifier>
								<boolean label="nullable">False</boolean>
							</nullable-type>
						</identikey-type>
						<boolean label="breed">False</boolean>
						<call label="value">
							<extract-member label="receiver">
								<string label="source">🿰 Hello,</string>
								<identifier label="member-name">concat</identifier>
							</extract-member>
							<argument>
								<string label="value"> World 🿱</string>
							</argument>
						</call>
					</declare-assign>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<identifier label="value">str</identifier>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<extract-member label="value">
								<identifier label="source">str</identifier>
								<identifier label="member-name">length</identifier>
							</extract-member>
						</argument>
					</call>
					<for-range label="member">
						<identifier label="name">x</identifier>
						<integer label="start">1</integer>
						<integer label="limit">20</integer>
						<boolean label="inclusive">False</boolean>
						<call label="action">
							<identifier label="receiver">println</identifier>
							<argument>
								<call label="value">
									<extract-member label="receiver">
										<identifier label="source">x</identifier>
										<identifier label="member-name">add</identifier>
									</extract-member>
									<argument>
										<integer label="value">10000</integer>
									</argument>
								</call>
							</argument>
						</call>
					</for-range>
					<declare-assign label="member">
						<identifier label="name">🿰🿱</identifier>
						<identikey-type>
							<identikey-category>DYNAMIC</identikey-category>
							<nullable-type>
								<boolean label="nullable">False</boolean>
							</nullable-type>
						</identikey-type>
						<boolean label="breed">False</boolean>
						<string label="value">astral characters in identifiers</string>
					</declare-assign>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<identifier label="value">🿰🿱</identifier>
						</argument>
					</call>
				</block>
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">testNonProducers</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<block label="body" />
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">testSometimesProducers</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<block label="body" />
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">testAlwaysProducers</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<block label="body">
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">testBooleanLogic()</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">testBooleanLogic</identifier>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">function</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<call label="value">
								<function label="receiver">
									<string label="body">some stuff</string>
								</function>
							</call>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">identifier</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<identifier label="value">true</identifier>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">integer</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<integer label="value">9000</integer>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">rational</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<rational label="value">123.456</rational>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">string</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<string label="value">This is some text.</string>
						</argument>
					</call>
				</block>
			</function>
		</declare-first>
		<declare-first>
			<identifier label="name">testBooleanLogic</identifier>
			<identikey-type>
				<identikey-category>FUNCTION</identikey-category>
				<nullable-type>
					<boolean label="nullable">False</boolean>
				</nullable-type>
			</identikey-type>
			<boolean label="breed">False</boolean>
			<function label="value">
				<block label="body">
					<declare-assign label="member">
						<identifier label="name">t</identifier>
						<identikey-type>
							<identikey-category>TYPED</identikey-category>
							<nullable-type>
								<boolean label="nullable">False</boolean>
							</nullable-type>
						</identikey-type>
						<boolean label="breed">False</boolean>
						<identifier label="value">true</identifier>
					</declare-assign>
					<declare-assign label="member">
						<identifier label="name">f</identifier>
						<identikey-type>
							<identikey-category>TYPED</identikey-category>
							<nullable-type>
								<boolean label="nullable">False</boolean>
							</nullable-type>
						</identikey-type>
						<boolean label="breed">False</boolean>
						<identifier label="value">false</identifier>
					</declare-assign>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">and</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<and label="value">
								<identifier label="first">f</identifier>
								<identifier label="second">t</identifier>
							</and>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<and label="value">
								<identifier label="first">t</identifier>
								<identifier label="second">t</identifier>
							</and>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">nand</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<nand label="value">
								<identifier label="first">f</identifier>
								<identifier label="second">t</identifier>
							</nand>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<nand label="value">
								<identifier label="first">t</identifier>
								<identifier label="second">t</identifier>
							</nand>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">or</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<or label="value">
								<identifier label="first">f</identifier>
								<identifier label="second">t</identifier>
							</or>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<or label="value">
								<identifier label="first">f</identifier>
								<identifier label="second">f</identifier>
							</or>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">nor</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<nor label="value">
								<identifier label="first">f</identifier>
								<identifier label="second">t</identifier>
							</nor>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<nor label="value">
								<identifier label="first">f</identifier>
								<identifier label="second">f</identifier>
							</nor>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">xor</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<xor label="value">
								<identifier label="first">t</identifier>
								<identifier label="second">f</identifier>
							</xor>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<xor label="value">
								<identifier label="first">t</identifier>
								<identifier label="second">t</identifier>
							</xor>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">header</identifier>
						<argument>
							<string label="value">xnor</string>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<xnor label="value">
								<identifier label="first">t</identifier>
								<identifier label="second">f</identifier>
							</xnor>
						</argument>
					</call>
					<call label="member">
						<identifier label="receiver">println</identifier>
						<argument>
							<xnor label="value">
								<identifier label="first">t</identifier>
								<identifier label="second">t</identifier>
							</xnor>
						</argument>
					</call>
				</block>
			</function>
		</declare-first>
	</inline-plane>
</bundle>
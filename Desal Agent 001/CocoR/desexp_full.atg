using System.Collections.Generic;

COMPILER Desexp
	public Bridge bridge;
	public IList<Node_Import> imports;
	public IList<INode_ScopeAlteration> scopeAlterations;
	public IList<Node_DeclareFirst> declareFirsts;

CHARACTERS
	cLETTER = 'a'..'z' + 'A'..'Z' + '-' .
	cNUMERAL = '0'..'9' .
	cINSIDESTRING = cLETTER + cNUMERAL + ' ' + '-' .

TOKENS
	tOPENPAREN = "(" .
	tCLOSEPAREN = ")" .
	tIDENTIFIER = cLETTER { cLETTER | cNUMERAL } .
	tINTEGER = cNUMERAL { cNUMERAL } .
	tSTRING = '"' cINSIDESTRING '"' .

COMMENTS FROM "/*" TO "*/"
COMMENTS FROM "#" TO '\n'

IGNORE '\n' + '\r' + '\t'

PRODUCTIONS //------------------------------------------

/*
W - wrapped e.g. "(...)"
B - bare e.g. the "..." in "(...)"

N - named
A - anonymous (not named)

R - required
O - optional
Z - collection of zero or more
C - collection of one or more

combinations for terminals:
BAR, BAO, WAC

combinations for tree expressions:
BNR

combinations for tree non-expressions:
WAR, WAO, WAZ, WAC (two WNR)

combinations for supertypes:
WNR, WNO, WNZ, WNC (BNR for implementation purposes)
*/

Desexp =
	Desexp2 { Desexp2 }
.

Desexp2 =
	"(" Desexp3 ")"
.

Desexp3
	= ImportBNR
	| ScopeAlterationBNR
	| DeclareFirstBNR
.

BooleanBAR
	= "true"
	| "false"
.

/* xxx
DeclareFirstWNR =
	"("
	DeclareFirstBNR
	")"
.
*/

DeclareFirstBNR =
	"declare-first"
	IdentifierBAR
	IdentikeyTypeWAR
	BooleanBAR
	ExpressionWNR
.

ExposeBNR =
	"expose"
	IdentifierWAC
.

ExpressionWNR
	= "(" ExpressionBNR ")"
	| IdentifierBAR
	| StringBAR
	| tINTEGER
.

ExpressionWNO
	= "-"
	| ExpressionWNR
.

//should only be referred to from ExpressionWNR
ExpressionBNR
	= FunctionBNR
.

FunctionBNR =
	"function"
	ParameterWAZ
	NullableTypeWAO
	ExpressionWNR
.

IdentifierBAR =
	tIDENTIFIER
.

IdentifierBAO
	= "-"
	| IdentifierBAR
.

IdentifierWAC =
	"("
	[ IdentifierBAR { IdentifierBAR } ]
	")"
.

IdentikeyCategoryBAR
	= "namespace"
	| "dynamic"
	| "typed"
	| "constant"
	| "function"
.

IdentikeyTypeBAR =
	IdentikeyCategoryBAR
	NullableTypeWAR
.

IdentikeyTypeWAR =
	"("
	IdentikeyTypeBAR
	")"
.

ImportBNR =
	"import"
	StringBAR
	IdentifierBAR
.


NullableTypeBAR =
	ExpressionWNO
	BooleanBAR
.

NullableTypeWAO
	= "-"
	| NullableTypeWAR
.

NullableTypeWAR =
	"(" NullableTypeBAR ")" .

ParameterWAZ =
	"(" [ ParameterWAR { ParameterWAR } ] ")"
.

ParameterWAR =
	"("
	/* XXX NOT IMPLEMENTED */
	")"
.

/*
ScopeAlterationWNR =
	"("
	ScopeAlterationBNR
	")"
.
*/

ScopeAlterationBNR
	= UsingBNR
	| ExposeBNR
.

StringBAR =
	tSTRING
.

UsingBNR =
	IdentifierWAC
	IdentifierBAO
.

END Desexp .

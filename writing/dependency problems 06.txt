--- example code
defirst foo = alpha()
defirst alpha = { beta }
defirst beta = { alpha }

--- dependencies
foo has an execute dependency on alpha.
alpha has a finish dependency on beta.
beta has a finish dependency on alpha.

--- run through
foo has an execute dependency on alpha, which is empty, so foo is not executed.
	foo is setup to be checked when the state of foo changes.
alpha has no execute dependencies, so it is executed.
	The state of alpha is changed to waiting.
	alpha has a finish dependency on beta, which is empty.
	alpha is setup to be checked when the state of beta changes.
beta has no execute dependencies, so it is executed.
	The state of beta is changed to waiting.
	alpha is checked because the state of beta changed.
		alpha has only a finish dependency on beta, which is waiting.
		beta has only a finish dependency on alpha, which has already been checked.
		The state of all scidentres involved is changed from waiting to ready, without firing any events.
			The state of alpha is changed to ready.
			The state of beta is changed to ready.
		Then, the related events are fired.
			foo is checked because the state of alpha changed.
			foo has only an execute depedency on alpha, which is ready, so foo is executed.
			foo has no finish dependencies, so foo enters the ready state.

--- order of state changes
alpha: empty -> waiting
beta: empty -> waiting
alpha: waiting -> ready
beta: waiting -> ready
foo: empty -> ready


/* This file was generated by SableCC (http://www.sablecc.org/). */

using System;
using System.Collections;
using System.Text;

using  Acrid.Toy.SableCC.analysis;

namespace Acrid.Toy.SableCC.node {


public sealed class TTWord : Token
{
    public TTWord(string text)
    {
        Text = text;
    }

    public TTWord(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTWord(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTWord(this);
    }
}

public sealed class TTInteger : Token
{
    public TTInteger(string text)
    {
        Text = text;
    }

    public TTInteger(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTInteger(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTInteger(this);
    }
}

public sealed class TTRational : Token
{
    public TTRational(string text)
    {
        Text = text;
    }

    public TTRational(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTRational(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTRational(this);
    }
}

public sealed class TTString : Token
{
    public TTString(string text)
    {
        Text = text;
    }

    public TTString(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTString(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTString(this);
    }
}

public sealed class TTParenopen : Token
{
    public TTParenopen(string text)
    {
        Text = text;
    }

    public TTParenopen(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTParenopen(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTParenopen(this);
    }
}

public sealed class TTParenclose : Token
{
    public TTParenclose(string text)
    {
        Text = text;
    }

    public TTParenclose(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTParenclose(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTParenclose(this);
    }
}

public sealed class TTPlaceholder : Token
{
    public TTPlaceholder(string text)
    {
        Text = text;
    }

    public TTPlaceholder(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTPlaceholder(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTPlaceholder(this);
    }
}

public sealed class TTWhitespace : Token
{
    public TTWhitespace(string text)
    {
        Text = text;
    }

    public TTWhitespace(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTWhitespace(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTWhitespace(this);
    }
}

public sealed class TTLinecomment : Token
{
    public TTLinecomment(string text)
    {
        Text = text;
    }

    public TTLinecomment(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTLinecomment(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTLinecomment(this);
    }
}

public sealed class TTMultilinecomment : Token
{
    public TTMultilinecomment(string text)
    {
        Text = text;
    }

    public TTMultilinecomment(string text, int line, int pos)
    {
        Text = text;
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
      return new TTMultilinecomment(Text, Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseTTMultilinecomment(this);
    }
}


public abstract class Token : Node
{
    private string text;
    private int line;
    private int pos;

    public virtual string Text
    {
      get { return text; }
      set { text = value; }
    }

    public int Line
    {
      get { return line; }
      set { line = value; }
    }

    public int Pos
    {
      get { return pos; }
      set { pos = value; }
    }

    public override string ToString()
    {
        return text + " ";
    }

    internal override void RemoveChild(Node child)
    {
    }

    internal override void ReplaceChild(Node oldChild, Node newChild)
    {
    }
}

public sealed class EOF : Token
{
    public EOF()
    {
        Text = "";
    }

    public EOF(int line, int pos)
    {
        Text = "";
        Line = line;
        Pos = pos;
    }

    public override Object Clone()
    {
        return new EOF(Line, Pos);
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseEOF(this);
    }
}
}

/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.parser;

import Dextr.Sablecc.node.*;
import Dextr.Sablecc.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTOperatorMinus(TOperatorMinus node)
    {
        index = 0;
    }

    public void caseTOperatorPlus(TOperatorPlus node)
    {
        index = 1;
    }

    public void caseTOperatorClosingParenthesis(TOperatorClosingParenthesis node)
    {
        index = 2;
    }

    public void caseTKeywordLt(TKeywordLt node)
    {
        index = 3;
    }

    public void caseTKeywordFor(TKeywordFor node)
    {
        index = 4;
    }

    public void caseTKeywordOr(TKeywordOr node)
    {
        index = 5;
    }

    public void caseTKeywordDyn(TKeywordDyn node)
    {
        index = 6;
    }

    public void caseTOperatorTimes(TOperatorTimes node)
    {
        index = 7;
    }

    public void caseTKeywordImport(TKeywordImport node)
    {
        index = 8;
    }

    public void caseTKeywordNand(TKeywordNand node)
    {
        index = 9;
    }

    public void caseTKeywordGte(TKeywordGte node)
    {
        index = 10;
    }

    public void caseTKeywordDne(TKeywordDne node)
    {
        index = 11;
    }

    public void caseTKeywordPlane(TKeywordPlane node)
    {
        index = 12;
    }

    public void caseTOperatorClosingBrace(TOperatorClosingBrace node)
    {
        index = 13;
    }

    public void caseTKeywordFrom(TKeywordFrom node)
    {
        index = 14;
    }

    public void caseTKeywordElse(TKeywordElse node)
    {
        index = 15;
    }

    public void caseTKeywordElif(TKeywordElif node)
    {
        index = 16;
    }

    public void caseTOperatorDivide(TOperatorDivide node)
    {
        index = 17;
    }

    public void caseTKeywordDeclfirst(TKeywordDeclfirst node)
    {
        index = 18;
    }

    public void caseTKeywordGt(TKeywordGt node)
    {
        index = 19;
    }

    public void caseTOperatorOpeningBrace(TOperatorOpeningBrace node)
    {
        index = 20;
    }

    public void caseTKeywordIf(TKeywordIf node)
    {
        index = 21;
    }

    public void caseTOperatorOpeningParenthesis(TOperatorOpeningParenthesis node)
    {
        index = 22;
    }

    public void caseTKeywordVoid(TKeywordVoid node)
    {
        index = 23;
    }

    public void caseTKeywordAnd(TKeywordAnd node)
    {
        index = 24;
    }

    public void caseTKeywordXnor(TKeywordXnor node)
    {
        index = 25;
    }

    public void caseTKeywordXor(TKeywordXor node)
    {
        index = 26;
    }

    public void caseTKeywordNor(TKeywordNor node)
    {
        index = 27;
    }

    public void caseTKeywordEql(TKeywordEql node)
    {
        index = 28;
    }

    public void caseTKeywordTo(TKeywordTo node)
    {
        index = 29;
    }

    public void caseTOperatorAssign(TOperatorAssign node)
    {
        index = 30;
    }

    public void caseTKeywordDecl(TKeywordDecl node)
    {
        index = 31;
    }

    public void caseTKeywordFunc(TKeywordFunc node)
    {
        index = 32;
    }

    public void caseTKeywordLte(TKeywordLte node)
    {
        index = 33;
    }

    public void caseTKeywordUsing(TKeywordUsing node)
    {
        index = 34;
    }

    public void caseTKeywordExpose(TKeywordExpose node)
    {
        index = 35;
    }

    public void caseTOperatorExtractMember(TOperatorExtractMember node)
    {
        index = 36;
    }

    public void caseTOperatorComma(TOperatorComma node)
    {
        index = 37;
    }

    public void caseTNewline(TNewline node)
    {
        index = 38;
    }

    public void caseTIdentifier(TIdentifier node)
    {
        index = 39;
    }

    public void caseTInteger(TInteger node)
    {
        index = 40;
    }

    public void caseTRational(TRational node)
    {
        index = 41;
    }

    public void caseTString(TString node)
    {
        index = 42;
    }

    public void caseTTab(TTab node)
    {
        index = 43;
    }

    public void caseTSpace(TSpace node)
    {
        index = 44;
    }

    public void caseTLineComment(TLineComment node)
    {
        index = 45;
    }

    public void caseTMultilineComment(TMultilineComment node)
    {
        index = 46;
    }

    public void caseTIndentOpen(TIndentOpen node)
    {
        index = 47;
    }

    public void caseTIndentClose(TIndentClose node)
    {
        index = 48;
    }

    public void caseEOF(EOF node)
    {
        index = 49;
    }
}

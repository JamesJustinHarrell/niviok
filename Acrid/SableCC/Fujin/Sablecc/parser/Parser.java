/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.parser;

import Dextr.Sablecc.lexer.*;
import Dextr.Sablecc.node.*;
import Dextr.Sablecc.analysis.*;
import java.util.*;

import java.io.*;

public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_shift;
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(Lexer lexer)
    {
        this.lexer = lexer;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        if(!stack.hasNext())
        {
            stack.add(new State(numstate, listNode));
            return;
        }

        State s = (State) stack.next();
        s.state = numstate;
        s.nodes = listNode;
    }

    private int state()
    {
        State s = (State) stack.previous();
        stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return (ArrayList) ((State) stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        converter.index = -1;
        token.apply(converter);
        return converter.index;
    }

    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);

        List ign = null;
        while(true)
        {
            while(index(lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new TypedLinkedList(NodeCast.instance);
                }

                ign.add(lexer.next());
            }

            if(ign != null)
            {
                ignoredTokens.setIn(lexer.peek(), ign);
                ign = null;
            }

            last_pos = lexer.peek().getPos();
            last_line = lexer.peek().getLine();
            last_token = lexer.peek();

            int index = index(lexer.peek());
            action[0] = actionTable[state()][0][1];
            action[1] = actionTable[state()][0][2];

            int low = 1;
            int high = actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    action[0] = actionTable[state()][middle][1];
                    action[1] = actionTable[state()][middle][2];
                    break;
                }
            }

            switch(action[0])
            {
              case SHIFT:
              {
                ArrayList nodeList = new ArrayList(1);
                nodeList.add(lexer.next());
                push(action[1], nodeList);
                last_shift = action[1];
                break;
              }
              case REDUCE:
              {
                switch(action[1])
                {
                  case 0:
                  {
                    ArrayList nodeList = new0();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 1:
                  {
                    ArrayList nodeList = new1();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 2:
                  {
                    ArrayList nodeList = new2();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 3:
                  {
                    ArrayList nodeList = new3();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 4:
                  {
                    ArrayList nodeList = new4();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 5:
                  {
                    ArrayList nodeList = new5();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 6:
                  {
                    ArrayList nodeList = new6();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 7:
                  {
                    ArrayList nodeList = new7();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 8:
                  {
                    ArrayList nodeList = new8();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 9:
                  {
                    ArrayList nodeList = new9();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 10:
                  {
                    ArrayList nodeList = new10();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 11:
                  {
                    ArrayList nodeList = new11();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 12:
                  {
                    ArrayList nodeList = new12();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 13:
                  {
                    ArrayList nodeList = new13();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 14:
                  {
                    ArrayList nodeList = new14();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 15:
                  {
                    ArrayList nodeList = new15();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 16:
                  {
                    ArrayList nodeList = new16();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 17:
                  {
                    ArrayList nodeList = new17();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 18:
                  {
                    ArrayList nodeList = new18();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 19:
                  {
                    ArrayList nodeList = new19();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 20:
                  {
                    ArrayList nodeList = new20();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 21:
                  {
                    ArrayList nodeList = new21();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 22:
                  {
                    ArrayList nodeList = new22();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 23:
                  {
                    ArrayList nodeList = new23();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 24:
                  {
                    ArrayList nodeList = new24();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 25:
                  {
                    ArrayList nodeList = new25();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 26:
                  {
                    ArrayList nodeList = new26();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 27:
                  {
                    ArrayList nodeList = new27();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 28:
                  {
                    ArrayList nodeList = new28();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 29:
                  {
                    ArrayList nodeList = new29();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 30:
                  {
                    ArrayList nodeList = new30();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 31:
                  {
                    ArrayList nodeList = new31();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 32:
                  {
                    ArrayList nodeList = new32();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 33:
                  {
                    ArrayList nodeList = new33();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 34:
                  {
                    ArrayList nodeList = new34();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 35:
                  {
                    ArrayList nodeList = new35();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 36:
                  {
                    ArrayList nodeList = new36();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 37:
                  {
                    ArrayList nodeList = new37();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 38:
                  {
                    ArrayList nodeList = new38();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 39:
                  {
                    ArrayList nodeList = new39();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 40:
                  {
                    ArrayList nodeList = new40();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 41:
                  {
                    ArrayList nodeList = new41();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 42:
                  {
                    ArrayList nodeList = new42();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 43:
                  {
                    ArrayList nodeList = new43();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 44:
                  {
                    ArrayList nodeList = new44();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 45:
                  {
                    ArrayList nodeList = new45();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 46:
                  {
                    ArrayList nodeList = new46();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 47:
                  {
                    ArrayList nodeList = new47();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 48:
                  {
                    ArrayList nodeList = new48();
                    push(goTo(1), nodeList);
                    break;
                  }
                  case 49:
                  {
                    ArrayList nodeList = new49();
                    push(goTo(2), nodeList);
                    break;
                  }
                  case 50:
                  {
                    ArrayList nodeList = new50();
                    push(goTo(2), nodeList);
                    break;
                  }
                  case 51:
                  {
                    ArrayList nodeList = new51();
                    push(goTo(3), nodeList);
                    break;
                  }
                  case 52:
                  {
                    ArrayList nodeList = new52();
                    push(goTo(3), nodeList);
                    break;
                  }
                  case 53:
                  {
                    ArrayList nodeList = new53();
                    push(goTo(3), nodeList);
                    break;
                  }
                  case 54:
                  {
                    ArrayList nodeList = new54();
                    push(goTo(4), nodeList);
                    break;
                  }
                  case 55:
                  {
                    ArrayList nodeList = new55();
                    push(goTo(4), nodeList);
                    break;
                  }
                  case 56:
                  {
                    ArrayList nodeList = new56();
                    push(goTo(5), nodeList);
                    break;
                  }
                  case 57:
                  {
                    ArrayList nodeList = new57();
                    push(goTo(5), nodeList);
                    break;
                  }
                  case 58:
                  {
                    ArrayList nodeList = new58();
                    push(goTo(5), nodeList);
                    break;
                  }
                  case 59:
                  {
                    ArrayList nodeList = new59();
                    push(goTo(6), nodeList);
                    break;
                  }
                  case 60:
                  {
                    ArrayList nodeList = new60();
                    push(goTo(6), nodeList);
                    break;
                  }
                  case 61:
                  {
                    ArrayList nodeList = new61();
                    push(goTo(7), nodeList);
                    break;
                  }
                  case 62:
                  {
                    ArrayList nodeList = new62();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 63:
                  {
                    ArrayList nodeList = new63();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 64:
                  {
                    ArrayList nodeList = new64();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 65:
                  {
                    ArrayList nodeList = new65();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 66:
                  {
                    ArrayList nodeList = new66();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 67:
                  {
                    ArrayList nodeList = new67();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 68:
                  {
                    ArrayList nodeList = new68();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 69:
                  {
                    ArrayList nodeList = new69();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 70:
                  {
                    ArrayList nodeList = new70();
                    push(goTo(9), nodeList);
                    break;
                  }
                  case 71:
                  {
                    ArrayList nodeList = new71();
                    push(goTo(9), nodeList);
                    break;
                  }
                  case 72:
                  {
                    ArrayList nodeList = new72();
                    push(goTo(10), nodeList);
                    break;
                  }
                  case 73:
                  {
                    ArrayList nodeList = new73();
                    push(goTo(11), nodeList);
                    break;
                  }
                  case 74:
                  {
                    ArrayList nodeList = new74();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 75:
                  {
                    ArrayList nodeList = new75();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 76:
                  {
                    ArrayList nodeList = new76();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 77:
                  {
                    ArrayList nodeList = new77();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 78:
                  {
                    ArrayList nodeList = new78();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 79:
                  {
                    ArrayList nodeList = new79();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 80:
                  {
                    ArrayList nodeList = new80();
                    push(goTo(13), nodeList);
                    break;
                  }
                  case 81:
                  {
                    ArrayList nodeList = new81();
                    push(goTo(13), nodeList);
                    break;
                  }
                  case 82:
                  {
                    ArrayList nodeList = new82();
                    push(goTo(14), nodeList);
                    break;
                  }
                  case 83:
                  {
                    ArrayList nodeList = new83();
                    push(goTo(14), nodeList);
                    break;
                  }
                  case 84:
                  {
                    ArrayList nodeList = new84();
                    push(goTo(15), nodeList);
                    break;
                  }
                  case 85:
                  {
                    ArrayList nodeList = new85();
                    push(goTo(15), nodeList);
                    break;
                  }
                  case 86:
                  {
                    ArrayList nodeList = new86();
                    push(goTo(16), nodeList);
                    break;
                  }
                  case 87:
                  {
                    ArrayList nodeList = new87();
                    push(goTo(16), nodeList);
                    break;
                  }
                  case 88:
                  {
                    ArrayList nodeList = new88();
                    push(goTo(17), nodeList);
                    break;
                  }
                  case 89:
                  {
                    ArrayList nodeList = new89();
                    push(goTo(18), nodeList);
                    break;
                  }
                  case 90:
                  {
                    ArrayList nodeList = new90();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 91:
                  {
                    ArrayList nodeList = new91();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 92:
                  {
                    ArrayList nodeList = new92();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 93:
                  {
                    ArrayList nodeList = new93();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 94:
                  {
                    ArrayList nodeList = new94();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 95:
                  {
                    ArrayList nodeList = new95();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 96:
                  {
                    ArrayList nodeList = new96();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 97:
                  {
                    ArrayList nodeList = new97();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 98:
                  {
                    ArrayList nodeList = new98();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 99:
                  {
                    ArrayList nodeList = new99();
                    push(goTo(20), nodeList);
                    break;
                  }
                  case 100:
                  {
                    ArrayList nodeList = new100();
                    push(goTo(21), nodeList);
                    break;
                  }
                  case 101:
                  {
                    ArrayList nodeList = new101();
                    push(goTo(22), nodeList);
                    break;
                  }
                  case 102:
                  {
                    ArrayList nodeList = new102();
                    push(goTo(22), nodeList);
                    break;
                  }
                  case 103:
                  {
                    ArrayList nodeList = new103();
                    push(goTo(23), nodeList);
                    break;
                  }
                  case 104:
                  {
                    ArrayList nodeList = new104();
                    push(goTo(23), nodeList);
                    break;
                  }
                  case 105:
                  {
                    ArrayList nodeList = new105();
                    push(goTo(24), nodeList);
                    break;
                  }
                  case 106:
                  {
                    ArrayList nodeList = new106();
                    push(goTo(24), nodeList);
                    break;
                  }
                  case 107:
                  {
                    ArrayList nodeList = new107();
                    push(goTo(25), nodeList);
                    break;
                  }
                  case 108:
                  {
                    ArrayList nodeList = new108();
                    push(goTo(25), nodeList);
                    break;
                  }
                  case 109:
                  {
                    ArrayList nodeList = new109();
                    push(goTo(25), nodeList);
                    break;
                  }
                  case 110:
                  {
                    ArrayList nodeList = new110();
                    push(goTo(25), nodeList);
                    break;
                  }
                  case 111:
                  {
                    ArrayList nodeList = new111();
                    push(goTo(26), nodeList);
                    break;
                  }
                  case 112:
                  {
                    ArrayList nodeList = new112();
                    push(goTo(26), nodeList);
                    break;
                  }
                  case 113:
                  {
                    ArrayList nodeList = new113();
                    push(goTo(27), nodeList);
                    break;
                  }
                  case 114:
                  {
                    ArrayList nodeList = new114();
                    push(goTo(28), nodeList);
                    break;
                  }
                  case 115:
                  {
                    ArrayList nodeList = new115();
                    push(goTo(28), nodeList);
                    break;
                  }
                  case 116:
                  {
                    ArrayList nodeList = new116();
                    push(goTo(29), nodeList);
                    break;
                  }
                  case 117:
                  {
                    ArrayList nodeList = new117();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 118:
                  {
                    ArrayList nodeList = new118();
                    push(goTo(31), nodeList);
                    break;
                  }
                  case 119:
                  {
                    ArrayList nodeList = new119();
                    push(goTo(31), nodeList);
                    break;
                  }
                  case 120:
                  {
                    ArrayList nodeList = new120();
                    push(goTo(31), nodeList);
                    break;
                  }
                  case 121:
                  {
                    ArrayList nodeList = new121();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 122:
                  {
                    ArrayList nodeList = new122();
                    push(goTo(33), nodeList);
                    break;
                  }
                  case 123:
                  {
                    ArrayList nodeList = new123();
                    push(goTo(33), nodeList);
                    break;
                  }
                  case 124:
                  {
                    ArrayList nodeList = new124();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 125:
                  {
                    ArrayList nodeList = new125();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 126:
                  {
                    ArrayList nodeList = new126();
                    push(goTo(35), nodeList);
                    break;
                  }
                  case 127:
                  {
                    ArrayList nodeList = new127();
                    push(goTo(35), nodeList);
                    break;
                  }
                  case 128:
                  {
                    ArrayList nodeList = new128();
                    push(goTo(35), nodeList);
                    break;
                  }
                  case 129:
                  {
                    ArrayList nodeList = new129();
                    push(goTo(35), nodeList);
                    break;
                  }
                  case 130:
                  {
                    ArrayList nodeList = new130();
                    push(goTo(35), nodeList);
                    break;
                  }
                  case 131:
                  {
                    ArrayList nodeList = new131();
                    push(goTo(36), nodeList);
                    break;
                  }
                  case 132:
                  {
                    ArrayList nodeList = new132();
                    push(goTo(36), nodeList);
                    break;
                  }
                  case 133:
                  {
                    ArrayList nodeList = new133();
                    push(goTo(37), nodeList);
                    break;
                  }
                  case 134:
                  {
                    ArrayList nodeList = new134();
                    push(goTo(37), nodeList);
                    break;
                  }
                  case 135:
                  {
                    ArrayList nodeList = new135();
                    push(goTo(37), nodeList);
                    break;
                  }
                  case 136:
                  {
                    ArrayList nodeList = new136();
                    push(goTo(37), nodeList);
                    break;
                  }
                  case 137:
                  {
                    ArrayList nodeList = new137();
                    push(goTo(38), nodeList);
                    break;
                  }
                  case 138:
                  {
                    ArrayList nodeList = new138();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 139:
                  {
                    ArrayList nodeList = new139();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 140:
                  {
                    ArrayList nodeList = new140();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 141:
                  {
                    ArrayList nodeList = new141();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 142:
                  {
                    ArrayList nodeList = new142();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 143:
                  {
                    ArrayList nodeList = new143();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 144:
                  {
                    ArrayList nodeList = new144();
                    push(goTo(40), nodeList);
                    break;
                  }
                  case 145:
                  {
                    ArrayList nodeList = new145();
                    push(goTo(41), nodeList);
                    break;
                  }
                  case 146:
                  {
                    ArrayList nodeList = new146();
                    push(goTo(41), nodeList);
                    break;
                  }
                  case 147:
                  {
                    ArrayList nodeList = new147();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 148:
                  {
                    ArrayList nodeList = new148();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 149:
                  {
                    ArrayList nodeList = new149();
                    push(goTo(43), nodeList);
                    break;
                  }
                  case 150:
                  {
                    ArrayList nodeList = new150();
                    push(goTo(43), nodeList);
                    break;
                  }
                }
                break;
              }
              case ACCEPT:
              {
                EOF node2 = (EOF) lexer.next();
                PDocument node1 = (PDocument) ((ArrayList)pop()).get(0);
                Start node = new Start(node1, node2);
                return node;
              }
              case ERROR:
                throw new ParserException(last_token,
                  "[" + last_line + "," + last_pos + "] " +
                  errorMessages[errors[action[1]]]);
            }
        }
    }

    ArrayList new0()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        PDeclarefirstlist pdeclarefirstlistNode6 = (PDeclarefirstlist)nodeArrayList1.get(0);
        AADocumentinside pdocumentinsideNode5 = new AADocumentinside (
              pdeclarefirstlistNode6
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new1()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        PDeclarefirstlist pdeclarefirstlistNode9 = (PDeclarefirstlist)nodeArrayList2.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode8,
              pdeclarefirstlistNode9
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new2()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode9,
              pdeclarefirstlistNode10
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new3()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        PDeclarefirstlist pdeclarefirstlistNode6 = (PDeclarefirstlist)nodeArrayList2.get(0);
        AADocumentinside pdocumentinsideNode5 = new AADocumentinside (
              pdeclarefirstlistNode6
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new4()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        PDeclarefirstlist pdeclarefirstlistNode9 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode8,
              pdeclarefirstlistNode9
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new5()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode9,
              pdeclarefirstlistNode10
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new6()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList2.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new7()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new8()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new9()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList3.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new10()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new11()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new12()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList2.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new13()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new14()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new15()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList3.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new16()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new17()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new18()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        PDeclarefirstlist pdeclarefirstlistNode8 = (PDeclarefirstlist)nodeArrayList3.get(0);
        AADocumentinside pdocumentinsideNode7 = new AADocumentinside (
              pdeclarefirstlistNode8
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new19()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode10,
              pdeclarefirstlistNode11
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new20()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode11 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        TypedLinkedList listNode10 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode10 != null )
        {
            listNode11.addAll(listNode10);
        }
        PDeclarefirstlist pdeclarefirstlistNode12 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode11,
              pdeclarefirstlistNode12
        );
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new21()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        PDeclarefirstlist pdeclarefirstlistNode8 = (PDeclarefirstlist)nodeArrayList4.get(0);
        AADocumentinside pdocumentinsideNode7 = new AADocumentinside (
              pdeclarefirstlistNode8
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new22()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode10,
              pdeclarefirstlistNode11
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new23()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode11 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        TypedLinkedList listNode10 = (TypedLinkedList)nodeArrayList5.get(0);
        if ( listNode10 != null )
        {
            listNode11.addAll(listNode10);
        }
        PDeclarefirstlist pdeclarefirstlistNode12 = (PDeclarefirstlist)nodeArrayList6.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode11,
              pdeclarefirstlistNode12
        );
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              null
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new24()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        PDeclarefirstlist pdeclarefirstlistNode6 = (PDeclarefirstlist)nodeArrayList1.get(0);
        AADocumentinside pdocumentinsideNode5 = new AADocumentinside (
              pdeclarefirstlistNode6
        );
        TNewline tnewlineNode7 = (TNewline)nodeArrayList2.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              tnewlineNode7
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new25()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        PDeclarefirstlist pdeclarefirstlistNode9 = (PDeclarefirstlist)nodeArrayList2.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode8,
              pdeclarefirstlistNode9
        );
        TNewline tnewlineNode10 = (TNewline)nodeArrayList3.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              tnewlineNode10
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new26()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode9,
              pdeclarefirstlistNode10
        );
        TNewline tnewlineNode11 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              tnewlineNode11
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new27()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        PDeclarefirstlist pdeclarefirstlistNode6 = (PDeclarefirstlist)nodeArrayList2.get(0);
        AADocumentinside pdocumentinsideNode5 = new AADocumentinside (
              pdeclarefirstlistNode6
        );
        TNewline tnewlineNode7 = (TNewline)nodeArrayList3.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              tnewlineNode7
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new28()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        PDeclarefirstlist pdeclarefirstlistNode9 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode8,
              pdeclarefirstlistNode9
        );
        TNewline tnewlineNode10 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              tnewlineNode10
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new29()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode5 = new ABDocumentinside (
              listNode7,
              listNode9,
              pdeclarefirstlistNode10
        );
        TNewline tnewlineNode11 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode4,
              pdocumentinsideNode5,
              tnewlineNode11
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new30()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList2.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        TNewline tnewlineNode8 = (TNewline)nodeArrayList3.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode8
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new31()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        TNewline tnewlineNode11 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode11
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new32()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        TNewline tnewlineNode12 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode12
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new33()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList3.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        TNewline tnewlineNode8 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode8
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new34()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        TNewline tnewlineNode11 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode11
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new35()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        TNewline tnewlineNode12 = (TNewline)nodeArrayList6.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode12
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new36()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList2.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        TNewline tnewlineNode8 = (TNewline)nodeArrayList3.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode8
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new37()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList3.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        TNewline tnewlineNode11 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode11
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new38()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        TNewline tnewlineNode12 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode12
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new39()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        PDeclarefirstlist pdeclarefirstlistNode7 = (PDeclarefirstlist)nodeArrayList3.get(0);
        AADocumentinside pdocumentinsideNode6 = new AADocumentinside (
              pdeclarefirstlistNode7
        );
        TNewline tnewlineNode8 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode8
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new40()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        PDeclarefirstlist pdeclarefirstlistNode10 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode9,
              pdeclarefirstlistNode10
        );
        TNewline tnewlineNode11 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode11
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new41()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode8 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode7 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode7 != null )
        {
            listNode8.addAll(listNode7);
        }
        TypedLinkedList listNode9 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode9 != null )
        {
            listNode10.addAll(listNode9);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode6 = new ABDocumentinside (
              listNode8,
              listNode10,
              pdeclarefirstlistNode11
        );
        TNewline tnewlineNode12 = (TNewline)nodeArrayList6.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode3,
              listNode5,
              pdocumentinsideNode6,
              tnewlineNode12
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new42()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        PDeclarefirstlist pdeclarefirstlistNode8 = (PDeclarefirstlist)nodeArrayList3.get(0);
        AADocumentinside pdocumentinsideNode7 = new AADocumentinside (
              pdeclarefirstlistNode8
        );
        TNewline tnewlineNode9 = (TNewline)nodeArrayList4.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              tnewlineNode9
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new43()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList4.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode10,
              pdeclarefirstlistNode11
        );
        TNewline tnewlineNode12 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              tnewlineNode12
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new44()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode11 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        TypedLinkedList listNode10 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode10 != null )
        {
            listNode11.addAll(listNode10);
        }
        PDeclarefirstlist pdeclarefirstlistNode12 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode11,
              pdeclarefirstlistNode12
        );
        TNewline tnewlineNode13 = (TNewline)nodeArrayList6.get(0);
        ADocument pdocumentNode1 = new ADocument (
              null,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              tnewlineNode13
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new45()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        PDeclarefirstlist pdeclarefirstlistNode8 = (PDeclarefirstlist)nodeArrayList4.get(0);
        AADocumentinside pdocumentinsideNode7 = new AADocumentinside (
              pdeclarefirstlistNode8
        );
        TNewline tnewlineNode9 = (TNewline)nodeArrayList5.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              tnewlineNode9
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new46()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode10 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        PDeclarefirstlist pdeclarefirstlistNode11 = (PDeclarefirstlist)nodeArrayList5.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode10,
              pdeclarefirstlistNode11
        );
        TNewline tnewlineNode12 = (TNewline)nodeArrayList6.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              tnewlineNode12
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new47()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        TypedLinkedList listNode9 = new TypedLinkedList();
        TypedLinkedList listNode11 = new TypedLinkedList();
        TypedLinkedList listNode8 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode8 != null )
        {
            listNode9.addAll(listNode8);
        }
        TypedLinkedList listNode10 = (TypedLinkedList)nodeArrayList5.get(0);
        if ( listNode10 != null )
        {
            listNode11.addAll(listNode10);
        }
        PDeclarefirstlist pdeclarefirstlistNode12 = (PDeclarefirstlist)nodeArrayList6.get(0);
        ABDocumentinside pdocumentinsideNode7 = new ABDocumentinside (
              listNode9,
              listNode11,
              pdeclarefirstlistNode12
        );
        TNewline tnewlineNode13 = (TNewline)nodeArrayList7.get(0);
        ADocument pdocumentNode1 = new ADocument (
              tnewlineNode2,
              listNode4,
              listNode6,
              pdocumentinsideNode7,
              tnewlineNode13
        );
        nodeList.add(pdocumentNode1);
        return nodeList;
    }
    ArrayList new48()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordPlane tkeywordplaneNode2 = (TKeywordPlane)nodeArrayList1.get(0);
        TString tstringNode3 = (TString)nodeArrayList2.get(0);
        TNewline tnewlineNode4 = (TNewline)nodeArrayList3.get(0);
        APlanereference pplanereferenceNode1 = new APlanereference (
              tkeywordplaneNode2,
              tstringNode3,
              tnewlineNode4
        );
        nodeList.add(pplanereferenceNode1);
        return nodeList;
    }
    ArrayList new49()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDeclarefirst pdeclarefirstNode2 = (PDeclarefirst)nodeArrayList1.get(0);
        AADeclarefirstlist pdeclarefirstlistNode1 = new AADeclarefirstlist (
              pdeclarefirstNode2
        );
        nodeList.add(pdeclarefirstlistNode1);
        return nodeList;
    }
    ArrayList new50()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDeclarefirstlist pdeclarefirstlistNode2 = (PDeclarefirstlist)nodeArrayList1.get(0);
        TNewline tnewlineNode3 = (TNewline)nodeArrayList2.get(0);
        PDeclarefirst pdeclarefirstNode4 = (PDeclarefirst)nodeArrayList3.get(0);
        ABDeclarefirstlist pdeclarefirstlistNode1 = new ABDeclarefirstlist (
              pdeclarefirstlistNode2,
              tnewlineNode3,
              pdeclarefirstNode4
        );
        nodeList.add(pdeclarefirstlistNode1);
        return nodeList;
    }
    ArrayList new51()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PMult pmultNode2 = (PMult)nodeArrayList1.get(0);
        AAAdd paddNode1 = new AAAdd (
              pmultNode2
        );
        nodeList.add(paddNode1);
        return nodeList;
    }
    ArrayList new52()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAdd paddNode2 = (PAdd)nodeArrayList1.get(0);
        TOperatorPlus toperatorplusNode3 = (TOperatorPlus)nodeArrayList2.get(0);
        PMult pmultNode4 = (PMult)nodeArrayList3.get(0);
        ABAdd paddNode1 = new ABAdd (
              paddNode2,
              toperatorplusNode3,
              pmultNode4
        );
        nodeList.add(paddNode1);
        return nodeList;
    }
    ArrayList new53()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAdd paddNode2 = (PAdd)nodeArrayList1.get(0);
        TOperatorMinus toperatorminusNode3 = (TOperatorMinus)nodeArrayList2.get(0);
        PMult pmultNode4 = (PMult)nodeArrayList3.get(0);
        ACAdd paddNode1 = new ACAdd (
              paddNode2,
              toperatorminusNode3,
              pmultNode4
        );
        nodeList.add(paddNode1);
        return nodeList;
    }
    ArrayList new54()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PExpression pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        AAArgumentlist pargumentlistNode1 = new AAArgumentlist (
              pexpressionNode2
        );
        nodeList.add(pargumentlistNode1);
        return nodeList;
    }
    ArrayList new55()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PArgumentlist pargumentlistNode2 = (PArgumentlist)nodeArrayList1.get(0);
        TOperatorComma toperatorcommaNode3 = (TOperatorComma)nodeArrayList2.get(0);
        PExpression pexpressionNode4 = (PExpression)nodeArrayList3.get(0);
        ABArgumentlist pargumentlistNode1 = new ABArgumentlist (
              pargumentlistNode2,
              toperatorcommaNode3,
              pexpressionNode4
        );
        nodeList.add(pargumentlistNode1);
        return nodeList;
    }
    ArrayList new56()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBraceblock pbraceblockNode2 = (PBraceblock)nodeArrayList1.get(0);
        AABlock pblockNode1 = new AABlock (
              pbraceblockNode2
        );
        nodeList.add(pblockNode1);
        return nodeList;
    }
    ArrayList new57()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PTabblock ptabblockNode2 = (PTabblock)nodeArrayList1.get(0);
        ABBlock pblockNode1 = new ABBlock (
              ptabblockNode2
        );
        nodeList.add(pblockNode1);
        return nodeList;
    }
    ArrayList new58()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBracetabblock pbracetabblockNode2 = (PBracetabblock)nodeArrayList1.get(0);
        ACBlock pblockNode1 = new ACBlock (
              pbracetabblockNode2
        );
        nodeList.add(pblockNode1);
        return nodeList;
    }
    ArrayList new59()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TOperatorOpeningBrace toperatoropeningbraceNode2 = (TOperatorOpeningBrace)nodeArrayList1.get(0);
        TOperatorClosingBrace toperatorclosingbraceNode4 = (TOperatorClosingBrace)nodeArrayList2.get(0);
        ABraceblock pbraceblockNode1 = new ABraceblock (
              toperatoropeningbraceNode2,
              null,
              toperatorclosingbraceNode4
        );
        nodeList.add(pbraceblockNode1);
        return nodeList;
    }
    ArrayList new60()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TOperatorOpeningBrace toperatoropeningbraceNode2 = (TOperatorOpeningBrace)nodeArrayList1.get(0);
        PBraceblockinside pbraceblockinsideNode3 = (PBraceblockinside)nodeArrayList2.get(0);
        TOperatorClosingBrace toperatorclosingbraceNode4 = (TOperatorClosingBrace)nodeArrayList3.get(0);
        ABraceblock pbraceblockNode1 = new ABraceblock (
              toperatoropeningbraceNode2,
              pbraceblockinsideNode3,
              toperatorclosingbraceNode4
        );
        nodeList.add(pbraceblockNode1);
        return nodeList;
    }
    ArrayList new61()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PPrimary pprimaryNode2 = (PPrimary)nodeArrayList1.get(0);
        ABraceblockinside pbraceblockinsideNode1 = new ABraceblockinside (
              pprimaryNode2
        );
        nodeList.add(pbraceblockinsideNode1);
        return nodeList;
    }
    ArrayList new62()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList1.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList2.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              null,
              tindentopenNode3,
              null,
              null,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new63()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList2.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList3.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              tnewlineNode2,
              tindentopenNode3,
              null,
              null,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new64()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList1.get(0);
        PTabblockinside ptabblockinsideNode4 = (PTabblockinside)nodeArrayList2.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList3.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              null,
              tindentopenNode3,
              ptabblockinsideNode4,
              null,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new65()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList2.get(0);
        PTabblockinside ptabblockinsideNode4 = (PTabblockinside)nodeArrayList3.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList4.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              tnewlineNode2,
              tindentopenNode3,
              ptabblockinsideNode4,
              null,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new66()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList1.get(0);
        TNewline tnewlineNode5 = (TNewline)nodeArrayList2.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList3.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              null,
              tindentopenNode3,
              null,
              tnewlineNode5,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new67()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList2.get(0);
        TNewline tnewlineNode5 = (TNewline)nodeArrayList3.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList4.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              tnewlineNode2,
              tindentopenNode3,
              null,
              tnewlineNode5,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new68()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList1.get(0);
        PTabblockinside ptabblockinsideNode4 = (PTabblockinside)nodeArrayList2.get(0);
        TNewline tnewlineNode5 = (TNewline)nodeArrayList3.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList4.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              null,
              tindentopenNode3,
              ptabblockinsideNode4,
              tnewlineNode5,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new69()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TNewline tnewlineNode2 = (TNewline)nodeArrayList1.get(0);
        TIndentOpen tindentopenNode3 = (TIndentOpen)nodeArrayList2.get(0);
        PTabblockinside ptabblockinsideNode4 = (PTabblockinside)nodeArrayList3.get(0);
        TNewline tnewlineNode5 = (TNewline)nodeArrayList4.get(0);
        TIndentClose tindentcloseNode6 = (TIndentClose)nodeArrayList5.get(0);
        ATabblock ptabblockNode1 = new ATabblock (
              tnewlineNode2,
              tindentopenNode3,
              ptabblockinsideNode4,
              tnewlineNode5,
              tindentcloseNode6
        );
        nodeList.add(ptabblockNode1);
        return nodeList;
    }
    ArrayList new70()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PExpression pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        AATabblockinside ptabblockinsideNode1 = new AATabblockinside (
              pexpressionNode2
        );
        nodeList.add(ptabblockinsideNode1);
        return nodeList;
    }
    ArrayList new71()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PTabblockinside ptabblockinsideNode2 = (PTabblockinside)nodeArrayList1.get(0);
        TNewline tnewlineNode3 = (TNewline)nodeArrayList2.get(0);
        PExpression pexpressionNode4 = (PExpression)nodeArrayList3.get(0);
        ABTabblockinside ptabblockinsideNode1 = new ABTabblockinside (
              ptabblockinsideNode2,
              tnewlineNode3,
              pexpressionNode4
        );
        nodeList.add(ptabblockinsideNode1);
        return nodeList;
    }
    ArrayList new72()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TOperatorOpeningBrace toperatoropeningbraceNode2 = (TOperatorOpeningBrace)nodeArrayList1.get(0);
        TNewline tnewlineNode3 = (TNewline)nodeArrayList2.get(0);
        PTabblock ptabblockNode4 = (PTabblock)nodeArrayList3.get(0);
        TNewline tnewlineNode5 = (TNewline)nodeArrayList4.get(0);
        TOperatorClosingBrace toperatorclosingbraceNode6 = (TOperatorClosingBrace)nodeArrayList5.get(0);
        ABracetabblock pbracetabblockNode1 = new ABracetabblock (
              toperatoropeningbraceNode2,
              tnewlineNode3,
              ptabblockNode4,
              tnewlineNode5,
              toperatorclosingbraceNode6
        );
        nodeList.add(pbracetabblockNode1);
        return nodeList;
    }
    ArrayList new73()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        PBooleanfunction pbooleanfunctionNode3 = (PBooleanfunction)nodeArrayList2.get(0);
        PSimple psimpleNode4 = (PSimple)nodeArrayList3.get(0);
        ABooleanlogic pbooleanlogicNode1 = new ABooleanlogic (
              psimpleNode2,
              pbooleanfunctionNode3,
              psimpleNode4
        );
        nodeList.add(pbooleanlogicNode1);
        return nodeList;
    }
    ArrayList new74()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordAnd tkeywordandNode2 = (TKeywordAnd)nodeArrayList1.get(0);
        AABooleanfunction pbooleanfunctionNode1 = new AABooleanfunction (
              tkeywordandNode2
        );
        nodeList.add(pbooleanfunctionNode1);
        return nodeList;
    }
    ArrayList new75()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordNand tkeywordnandNode2 = (TKeywordNand)nodeArrayList1.get(0);
        ABBooleanfunction pbooleanfunctionNode1 = new ABBooleanfunction (
              tkeywordnandNode2
        );
        nodeList.add(pbooleanfunctionNode1);
        return nodeList;
    }
    ArrayList new76()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordOr tkeywordorNode2 = (TKeywordOr)nodeArrayList1.get(0);
        ACBooleanfunction pbooleanfunctionNode1 = new ACBooleanfunction (
              tkeywordorNode2
        );
        nodeList.add(pbooleanfunctionNode1);
        return nodeList;
    }
    ArrayList new77()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordNor tkeywordnorNode2 = (TKeywordNor)nodeArrayList1.get(0);
        ADBooleanfunction pbooleanfunctionNode1 = new ADBooleanfunction (
              tkeywordnorNode2
        );
        nodeList.add(pbooleanfunctionNode1);
        return nodeList;
    }
    ArrayList new78()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordXor tkeywordxorNode2 = (TKeywordXor)nodeArrayList1.get(0);
        AEBooleanfunction pbooleanfunctionNode1 = new AEBooleanfunction (
              tkeywordxorNode2
        );
        nodeList.add(pbooleanfunctionNode1);
        return nodeList;
    }
    ArrayList new79()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordXnor tkeywordxnorNode2 = (TKeywordXnor)nodeArrayList1.get(0);
        AFBooleanfunction pbooleanfunctionNode1 = new AFBooleanfunction (
              tkeywordxnorNode2
        );
        nodeList.add(pbooleanfunctionNode1);
        return nodeList;
    }
    ArrayList new80()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode3 = (TOperatorOpeningParenthesis)nodeArrayList2.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode5 = (TOperatorClosingParenthesis)nodeArrayList3.get(0);
        ACall pcallNode1 = new ACall (
              psimpleNode2,
              toperatoropeningparenthesisNode3,
              null,
              toperatorclosingparenthesisNode5
        );
        nodeList.add(pcallNode1);
        return nodeList;
    }
    ArrayList new81()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode3 = (TOperatorOpeningParenthesis)nodeArrayList2.get(0);
        PArgumentlist pargumentlistNode4 = (PArgumentlist)nodeArrayList3.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode5 = (TOperatorClosingParenthesis)nodeArrayList4.get(0);
        ACall pcallNode1 = new ACall (
              psimpleNode2,
              toperatoropeningparenthesisNode3,
              pargumentlistNode4,
              toperatorclosingparenthesisNode5
        );
        nodeList.add(pcallNode1);
        return nodeList;
    }
    ArrayList new82()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDecl tkeyworddeclNode2 = (TKeywordDecl)nodeArrayList1.get(0);
        TIdentifier tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);
        TOperatorAssign toperatorassignNode5 = (TOperatorAssign)nodeArrayList3.get(0);
        PExpression pexpressionNode6 = (PExpression)nodeArrayList4.get(0);
        ADeclareassign pdeclareassignNode1 = new ADeclareassign (
              tkeyworddeclNode2,
              null,
              tidentifierNode4,
              toperatorassignNode5,
              pexpressionNode6
        );
        nodeList.add(pdeclareassignNode1);
        return nodeList;
    }
    ArrayList new83()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDecl tkeyworddeclNode2 = (TKeywordDecl)nodeArrayList1.get(0);
        PSimple psimpleNode3 = (PSimple)nodeArrayList2.get(0);
        TIdentifier tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        TOperatorAssign toperatorassignNode5 = (TOperatorAssign)nodeArrayList4.get(0);
        PExpression pexpressionNode6 = (PExpression)nodeArrayList5.get(0);
        ADeclareassign pdeclareassignNode1 = new ADeclareassign (
              tkeyworddeclNode2,
              psimpleNode3,
              tidentifierNode4,
              toperatorassignNode5,
              pexpressionNode6
        );
        nodeList.add(pdeclareassignNode1);
        return nodeList;
    }
    ArrayList new84()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDecl tkeyworddeclNode2 = (TKeywordDecl)nodeArrayList1.get(0);
        TIdentifier tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);
        ADeclareempty pdeclareemptyNode1 = new ADeclareempty (
              tkeyworddeclNode2,
              null,
              tidentifierNode4
        );
        nodeList.add(pdeclareemptyNode1);
        return nodeList;
    }
    ArrayList new85()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDecl tkeyworddeclNode2 = (TKeywordDecl)nodeArrayList1.get(0);
        PSimple psimpleNode3 = (PSimple)nodeArrayList2.get(0);
        TIdentifier tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        ADeclareempty pdeclareemptyNode1 = new ADeclareempty (
              tkeyworddeclNode2,
              psimpleNode3,
              tidentifierNode4
        );
        nodeList.add(pdeclareemptyNode1);
        return nodeList;
    }
    ArrayList new86()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDeclarefirstnormal pdeclarefirstnormalNode2 = (PDeclarefirstnormal)nodeArrayList1.get(0);
        AADeclarefirst pdeclarefirstNode1 = new AADeclarefirst (
              pdeclarefirstnormalNode2
        );
        nodeList.add(pdeclarefirstNode1);
        return nodeList;
    }
    ArrayList new87()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PFunctiondeclaration pfunctiondeclarationNode2 = (PFunctiondeclaration)nodeArrayList1.get(0);
        ABDeclarefirst pdeclarefirstNode1 = new ABDeclarefirst (
              pfunctiondeclarationNode2
        );
        nodeList.add(pdeclarefirstNode1);
        return nodeList;
    }
    ArrayList new88()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDeclfirst tkeyworddeclfirstNode2 = (TKeywordDeclfirst)nodeArrayList1.get(0);
        TIdentifier tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        TOperatorAssign toperatorassignNode4 = (TOperatorAssign)nodeArrayList3.get(0);
        PExpression pexpressionNode5 = (PExpression)nodeArrayList4.get(0);
        ADeclarefirstnormal pdeclarefirstnormalNode1 = new ADeclarefirstnormal (
              tkeyworddeclfirstNode2,
              tidentifierNode3,
              toperatorassignNode4,
              pexpressionNode5
        );
        nodeList.add(pdeclarefirstnormalNode1);
        return nodeList;
    }
    ArrayList new89()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordExpose tkeywordexposeNode2 = (TKeywordExpose)nodeArrayList1.get(0);
        TIdentifier tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        TNewline tnewlineNode4 = (TNewline)nodeArrayList3.get(0);
        AExpose pexposeNode1 = new AExpose (
              tkeywordexposeNode2,
              tidentifierNode3,
              tnewlineNode4
        );
        nodeList.add(pexposeNode1);
        return nodeList;
    }
    ArrayList new90()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAdd paddNode2 = (PAdd)nodeArrayList1.get(0);
        AAExpression pexpressionNode1 = new AAExpression (
              paddNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new91()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBooleanlogic pbooleanlogicNode2 = (PBooleanlogic)nodeArrayList1.get(0);
        ABExpression pexpressionNode1 = new ABExpression (
              pbooleanlogicNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new92()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDeclareassign pdeclareassignNode2 = (PDeclareassign)nodeArrayList1.get(0);
        ACExpression pexpressionNode1 = new ACExpression (
              pdeclareassignNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new93()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDeclareempty pdeclareemptyNode2 = (PDeclareempty)nodeArrayList1.get(0);
        ADExpression pexpressionNode1 = new ADExpression (
              pdeclareemptyNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new94()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDeclarefirst pdeclarefirstNode2 = (PDeclarefirst)nodeArrayList1.get(0);
        AEExpression pexpressionNode1 = new AEExpression (
              pdeclarefirstNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new95()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PForrange pforrangeNode2 = (PForrange)nodeArrayList1.get(0);
        AFExpression pexpressionNode1 = new AFExpression (
              pforrangeNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new96()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PFunction pfunctionNode2 = (PFunction)nodeArrayList1.get(0);
        AGExpression pexpressionNode1 = new AGExpression (
              pfunctionNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new97()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PIfelse pifelseNode2 = (PIfelse)nodeArrayList1.get(0);
        AHExpression pexpressionNode1 = new AHExpression (
              pifelseNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new98()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PTest ptestNode2 = (PTest)nodeArrayList1.get(0);
        AIExpression pexpressionNode1 = new AIExpression (
              ptestNode2
        );
        nodeList.add(pexpressionNode1);
        return nodeList;
    }
    ArrayList new99()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        TOperatorExtractMember toperatorextractmemberNode3 = (TOperatorExtractMember)nodeArrayList2.get(0);
        TIdentifier tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        AExtractmember pextractmemberNode1 = new AExtractmember (
              psimpleNode2,
              toperatorextractmemberNode3,
              tidentifierNode4
        );
        nodeList.add(pextractmemberNode1);
        return nodeList;
    }
    ArrayList new100()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordFor tkeywordforNode2 = (TKeywordFor)nodeArrayList1.get(0);
        TIdentifier tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        TKeywordFrom tkeywordfromNode4 = (TKeywordFrom)nodeArrayList3.get(0);
        PSimple psimpleNode5 = (PSimple)nodeArrayList4.get(0);
        TKeywordTo tkeywordtoNode6 = (TKeywordTo)nodeArrayList5.get(0);
        PSimple psimpleNode7 = (PSimple)nodeArrayList6.get(0);
        PBlock pblockNode8 = (PBlock)nodeArrayList7.get(0);
        AForrange pforrangeNode1 = new AForrange (
              tkeywordforNode2,
              tidentifierNode3,
              tkeywordfromNode4,
              psimpleNode5,
              tkeywordtoNode6,
              psimpleNode7,
              pblockNode8
        );
        nodeList.add(pforrangeNode1);
        return nodeList;
    }
    ArrayList new101()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordFunc tkeywordfuncNode2 = (TKeywordFunc)nodeArrayList1.get(0);
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode3 = (TOperatorOpeningParenthesis)nodeArrayList2.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode4 = (TOperatorClosingParenthesis)nodeArrayList3.get(0);
        PBlock pblockNode6 = (PBlock)nodeArrayList4.get(0);
        AFunction pfunctionNode1 = new AFunction (
              tkeywordfuncNode2,
              toperatoropeningparenthesisNode3,
              toperatorclosingparenthesisNode4,
              null,
              pblockNode6
        );
        nodeList.add(pfunctionNode1);
        return nodeList;
    }
    ArrayList new102()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordFunc tkeywordfuncNode2 = (TKeywordFunc)nodeArrayList1.get(0);
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode3 = (TOperatorOpeningParenthesis)nodeArrayList2.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode4 = (TOperatorClosingParenthesis)nodeArrayList3.get(0);
        PType ptypeNode5 = (PType)nodeArrayList4.get(0);
        PBlock pblockNode6 = (PBlock)nodeArrayList5.get(0);
        AFunction pfunctionNode1 = new AFunction (
              tkeywordfuncNode2,
              toperatoropeningparenthesisNode3,
              toperatorclosingparenthesisNode4,
              ptypeNode5,
              pblockNode6
        );
        nodeList.add(pfunctionNode1);
        return nodeList;
    }
    ArrayList new103()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDyn tkeyworddynNode2 = (TKeywordDyn)nodeArrayList1.get(0);
        AAType ptypeNode1 = new AAType (
              tkeyworddynNode2
        );
        nodeList.add(ptypeNode1);
        return nodeList;
    }
    ArrayList new104()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordVoid tkeywordvoidNode2 = (TKeywordVoid)nodeArrayList1.get(0);
        ABType ptypeNode1 = new ABType (
              tkeywordvoidNode2
        );
        nodeList.add(ptypeNode1);
        return nodeList;
    }
    ArrayList new105()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordFunc tkeywordfuncNode2 = (TKeywordFunc)nodeArrayList1.get(0);
        TIdentifier tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode4 = (TOperatorOpeningParenthesis)nodeArrayList3.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode6 = (TOperatorClosingParenthesis)nodeArrayList4.get(0);
        PBlock pblockNode7 = (PBlock)nodeArrayList5.get(0);
        AFunctiondeclaration pfunctiondeclarationNode1 = new AFunctiondeclaration (
              tkeywordfuncNode2,
              tidentifierNode3,
              toperatoropeningparenthesisNode4,
              null,
              toperatorclosingparenthesisNode6,
              pblockNode7
        );
        nodeList.add(pfunctiondeclarationNode1);
        return nodeList;
    }
    ArrayList new106()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordFunc tkeywordfuncNode2 = (TKeywordFunc)nodeArrayList1.get(0);
        TIdentifier tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode4 = (TOperatorOpeningParenthesis)nodeArrayList3.get(0);
        PParameterlist pparameterlistNode5 = (PParameterlist)nodeArrayList4.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode6 = (TOperatorClosingParenthesis)nodeArrayList5.get(0);
        PBlock pblockNode7 = (PBlock)nodeArrayList6.get(0);
        AFunctiondeclaration pfunctiondeclarationNode1 = new AFunctiondeclaration (
              tkeywordfuncNode2,
              tidentifierNode3,
              toperatoropeningparenthesisNode4,
              pparameterlistNode5,
              toperatorclosingparenthesisNode6,
              pblockNode7
        );
        nodeList.add(pfunctiondeclarationNode1);
        return nodeList;
    }
    ArrayList new107()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PIf pifNode2 = (PIf)nodeArrayList1.get(0);
        AIfelse pifelseNode1 = new AIfelse (
              pifNode2,
              null,
              null
        );
        nodeList.add(pifelseNode1);
        return nodeList;
    }
    ArrayList new108()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PIf pifNode2 = (PIf)nodeArrayList1.get(0);
        PElif pelifNode3 = (PElif)nodeArrayList2.get(0);
        AIfelse pifelseNode1 = new AIfelse (
              pifNode2,
              pelifNode3,
              null
        );
        nodeList.add(pifelseNode1);
        return nodeList;
    }
    ArrayList new109()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PIf pifNode2 = (PIf)nodeArrayList1.get(0);
        PElse pelseNode4 = (PElse)nodeArrayList2.get(0);
        AIfelse pifelseNode1 = new AIfelse (
              pifNode2,
              null,
              pelseNode4
        );
        nodeList.add(pifelseNode1);
        return nodeList;
    }
    ArrayList new110()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PIf pifNode2 = (PIf)nodeArrayList1.get(0);
        PElif pelifNode3 = (PElif)nodeArrayList2.get(0);
        PElse pelseNode4 = (PElse)nodeArrayList3.get(0);
        AIfelse pifelseNode1 = new AIfelse (
              pifNode2,
              pelifNode3,
              pelseNode4
        );
        nodeList.add(pifelseNode1);
        return nodeList;
    }
    ArrayList new111()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        AAIfexpr pifexprNode1 = new AAIfexpr (
              psimpleNode2
        );
        nodeList.add(pifexprNode1);
        return nodeList;
    }
    ArrayList new112()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PTest ptestNode2 = (PTest)nodeArrayList1.get(0);
        ABIfexpr pifexprNode1 = new ABIfexpr (
              ptestNode2
        );
        nodeList.add(pifexprNode1);
        return nodeList;
    }
    ArrayList new113()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordIf tkeywordifNode2 = (TKeywordIf)nodeArrayList1.get(0);
        PIfexpr pifexprNode3 = (PIfexpr)nodeArrayList2.get(0);
        PBlock pblockNode4 = (PBlock)nodeArrayList3.get(0);
        AIf pifNode1 = new AIf (
              tkeywordifNode2,
              pifexprNode3,
              pblockNode4
        );
        nodeList.add(pifNode1);
        return nodeList;
    }
    ArrayList new114()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordElif tkeywordelifNode2 = (TKeywordElif)nodeArrayList1.get(0);
        PIfexpr pifexprNode3 = (PIfexpr)nodeArrayList2.get(0);
        PBlock pblockNode4 = (PBlock)nodeArrayList3.get(0);
        AAElif pelifNode1 = new AAElif (
              tkeywordelifNode2,
              pifexprNode3,
              pblockNode4
        );
        nodeList.add(pelifNode1);
        return nodeList;
    }
    ArrayList new115()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PElif pelifNode2 = (PElif)nodeArrayList1.get(0);
        TKeywordElif tkeywordelifNode3 = (TKeywordElif)nodeArrayList2.get(0);
        PIfexpr pifexprNode4 = (PIfexpr)nodeArrayList3.get(0);
        PBlock pblockNode5 = (PBlock)nodeArrayList4.get(0);
        ABElif pelifNode1 = new ABElif (
              pelifNode2,
              tkeywordelifNode3,
              pifexprNode4,
              pblockNode5
        );
        nodeList.add(pelifNode1);
        return nodeList;
    }
    ArrayList new116()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordElse tkeywordelseNode2 = (TKeywordElse)nodeArrayList1.get(0);
        PBlock pblockNode3 = (PBlock)nodeArrayList2.get(0);
        AElse pelseNode1 = new AElse (
              tkeywordelseNode2,
              pblockNode3
        );
        nodeList.add(pelseNode1);
        return nodeList;
    }
    ArrayList new117()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordImport tkeywordimportNode2 = (TKeywordImport)nodeArrayList1.get(0);
        TString tstringNode3 = (TString)nodeArrayList2.get(0);
        TNewline tnewlineNode4 = (TNewline)nodeArrayList3.get(0);
        AImport pimportNode1 = new AImport (
              tkeywordimportNode2,
              tstringNode3,
              tnewlineNode4
        );
        nodeList.add(pimportNode1);
        return nodeList;
    }
    ArrayList new118()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        AAMult pmultNode1 = new AAMult (
              psimpleNode2
        );
        nodeList.add(pmultNode1);
        return nodeList;
    }
    ArrayList new119()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        TOperatorTimes toperatortimesNode3 = (TOperatorTimes)nodeArrayList2.get(0);
        PSimple psimpleNode4 = (PSimple)nodeArrayList3.get(0);
        ABMult pmultNode1 = new ABMult (
              psimpleNode2,
              toperatortimesNode3,
              psimpleNode4
        );
        nodeList.add(pmultNode1);
        return nodeList;
    }
    ArrayList new120()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        TOperatorDivide toperatordivideNode3 = (TOperatorDivide)nodeArrayList2.get(0);
        PSimple psimpleNode4 = (PSimple)nodeArrayList3.get(0);
        ACMult pmultNode1 = new ACMult (
              psimpleNode2,
              toperatordivideNode3,
              psimpleNode4
        );
        nodeList.add(pmultNode1);
        return nodeList;
    }
    ArrayList new121()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIdentifier tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        AParameter pparameterNode1 = new AParameter (
              tidentifierNode2
        );
        nodeList.add(pparameterNode1);
        return nodeList;
    }
    ArrayList new122()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PParameter pparameterNode2 = (PParameter)nodeArrayList1.get(0);
        AAParameterlist pparameterlistNode1 = new AAParameterlist (
              pparameterNode2
        );
        nodeList.add(pparameterlistNode1);
        return nodeList;
    }
    ArrayList new123()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PParameterlist pparameterlistNode2 = (PParameterlist)nodeArrayList1.get(0);
        TOperatorComma toperatorcommaNode3 = (TOperatorComma)nodeArrayList2.get(0);
        PParameter pparameterNode4 = (PParameter)nodeArrayList3.get(0);
        ABParameterlist pparameterlistNode1 = new ABParameterlist (
              pparameterlistNode2,
              toperatorcommaNode3,
              pparameterNode4
        );
        nodeList.add(pparameterlistNode1);
        return nodeList;
    }
    ArrayList new124()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode2 = (TOperatorOpeningParenthesis)nodeArrayList1.get(0);
        PExpression pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode5 = (TOperatorClosingParenthesis)nodeArrayList3.get(0);
        AParenthetical pparentheticalNode1 = new AParenthetical (
              toperatoropeningparenthesisNode2,
              pexpressionNode3,
              null,
              toperatorclosingparenthesisNode5
        );
        nodeList.add(pparentheticalNode1);
        return nodeList;
    }
    ArrayList new125()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TOperatorOpeningParenthesis toperatoropeningparenthesisNode2 = (TOperatorOpeningParenthesis)nodeArrayList1.get(0);
        PExpression pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        TNewline tnewlineNode4 = (TNewline)nodeArrayList3.get(0);
        TOperatorClosingParenthesis toperatorclosingparenthesisNode5 = (TOperatorClosingParenthesis)nodeArrayList4.get(0);
        AParenthetical pparentheticalNode1 = new AParenthetical (
              toperatoropeningparenthesisNode2,
              pexpressionNode3,
              tnewlineNode4,
              toperatorclosingparenthesisNode5
        );
        nodeList.add(pparentheticalNode1);
        return nodeList;
    }
    ArrayList new126()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIdentifier tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        AAPrimary pprimaryNode1 = new AAPrimary (
              tidentifierNode2
        );
        nodeList.add(pprimaryNode1);
        return nodeList;
    }
    ArrayList new127()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        ABPrimary pprimaryNode1 = new ABPrimary (
              tintegerNode2
        );
        nodeList.add(pprimaryNode1);
        return nodeList;
    }
    ArrayList new128()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TRational trationalNode2 = (TRational)nodeArrayList1.get(0);
        ACPrimary pprimaryNode1 = new ACPrimary (
              trationalNode2
        );
        nodeList.add(pprimaryNode1);
        return nodeList;
    }
    ArrayList new129()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TString tstringNode2 = (TString)nodeArrayList1.get(0);
        ADPrimary pprimaryNode1 = new ADPrimary (
              tstringNode2
        );
        nodeList.add(pprimaryNode1);
        return nodeList;
    }
    ArrayList new130()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PParenthetical pparentheticalNode2 = (PParenthetical)nodeArrayList1.get(0);
        AEPrimary pprimaryNode1 = new AEPrimary (
              pparentheticalNode2
        );
        nodeList.add(pprimaryNode1);
        return nodeList;
    }
    ArrayList new131()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PExpose pexposeNode2 = (PExpose)nodeArrayList1.get(0);
        AAScopealteration pscopealterationNode1 = new AAScopealteration (
              pexposeNode2
        );
        nodeList.add(pscopealterationNode1);
        return nodeList;
    }
    ArrayList new132()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PUsing pusingNode2 = (PUsing)nodeArrayList1.get(0);
        ABScopealteration pscopealterationNode1 = new ABScopealteration (
              pusingNode2
        );
        nodeList.add(pscopealterationNode1);
        return nodeList;
    }
    ArrayList new133()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBlock pblockNode2 = (PBlock)nodeArrayList1.get(0);
        AASimple psimpleNode1 = new AASimple (
              pblockNode2
        );
        nodeList.add(psimpleNode1);
        return nodeList;
    }
    ArrayList new134()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCall pcallNode2 = (PCall)nodeArrayList1.get(0);
        ABSimple psimpleNode1 = new ABSimple (
              pcallNode2
        );
        nodeList.add(psimpleNode1);
        return nodeList;
    }
    ArrayList new135()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PExtractmember pextractmemberNode2 = (PExtractmember)nodeArrayList1.get(0);
        ACSimple psimpleNode1 = new ACSimple (
              pextractmemberNode2
        );
        nodeList.add(psimpleNode1);
        return nodeList;
    }
    ArrayList new136()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PPrimary pprimaryNode2 = (PPrimary)nodeArrayList1.get(0);
        ADSimple psimpleNode1 = new ADSimple (
              pprimaryNode2
        );
        nodeList.add(psimpleNode1);
        return nodeList;
    }
    ArrayList new137()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSimple psimpleNode2 = (PSimple)nodeArrayList1.get(0);
        PComparisonfunction pcomparisonfunctionNode3 = (PComparisonfunction)nodeArrayList2.get(0);
        PSimple psimpleNode4 = (PSimple)nodeArrayList3.get(0);
        ATest ptestNode1 = new ATest (
              psimpleNode2,
              pcomparisonfunctionNode3,
              psimpleNode4
        );
        nodeList.add(ptestNode1);
        return nodeList;
    }
    ArrayList new138()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordLt tkeywordltNode2 = (TKeywordLt)nodeArrayList1.get(0);
        AAComparisonfunction pcomparisonfunctionNode1 = new AAComparisonfunction (
              tkeywordltNode2
        );
        nodeList.add(pcomparisonfunctionNode1);
        return nodeList;
    }
    ArrayList new139()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordLte tkeywordlteNode2 = (TKeywordLte)nodeArrayList1.get(0);
        ABComparisonfunction pcomparisonfunctionNode1 = new ABComparisonfunction (
              tkeywordlteNode2
        );
        nodeList.add(pcomparisonfunctionNode1);
        return nodeList;
    }
    ArrayList new140()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordEql tkeywordeqlNode2 = (TKeywordEql)nodeArrayList1.get(0);
        ACComparisonfunction pcomparisonfunctionNode1 = new ACComparisonfunction (
              tkeywordeqlNode2
        );
        nodeList.add(pcomparisonfunctionNode1);
        return nodeList;
    }
    ArrayList new141()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordGte tkeywordgteNode2 = (TKeywordGte)nodeArrayList1.get(0);
        ADComparisonfunction pcomparisonfunctionNode1 = new ADComparisonfunction (
              tkeywordgteNode2
        );
        nodeList.add(pcomparisonfunctionNode1);
        return nodeList;
    }
    ArrayList new142()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordGt tkeywordgtNode2 = (TKeywordGt)nodeArrayList1.get(0);
        AEComparisonfunction pcomparisonfunctionNode1 = new AEComparisonfunction (
              tkeywordgtNode2
        );
        nodeList.add(pcomparisonfunctionNode1);
        return nodeList;
    }
    ArrayList new143()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordDne tkeyworddneNode2 = (TKeywordDne)nodeArrayList1.get(0);
        AFComparisonfunction pcomparisonfunctionNode1 = new AFComparisonfunction (
              tkeyworddneNode2
        );
        nodeList.add(pcomparisonfunctionNode1);
        return nodeList;
    }
    ArrayList new144()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TKeywordUsing tkeywordusingNode2 = (TKeywordUsing)nodeArrayList1.get(0);
        TIdentifier tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        TNewline tnewlineNode4 = (TNewline)nodeArrayList3.get(0);
        AUsing pusingNode1 = new AUsing (
              tkeywordusingNode2,
              tidentifierNode3,
              tnewlineNode4
        );
        nodeList.add(pusingNode1);
        return nodeList;
    }
    ArrayList new145()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PImport pimportNode1 = (PImport)nodeArrayList1.get(0);
        if ( pimportNode1 != null )
        {
            listNode2.add(pimportNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new146()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PImport pimportNode2 = (PImport)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pimportNode2 != null )
        {
            listNode3.add(pimportNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new147()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PScopealteration pscopealterationNode1 = (PScopealteration)nodeArrayList1.get(0);
        if ( pscopealterationNode1 != null )
        {
            listNode2.add(pscopealterationNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new148()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PScopealteration pscopealterationNode2 = (PScopealteration)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pscopealterationNode2 != null )
        {
            listNode3.add(pscopealterationNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new149()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PPlanereference pplanereferenceNode1 = (PPlanereference)nodeArrayList1.get(0);
        if ( pplanereferenceNode1 != null )
        {
            listNode2.add(pplanereferenceNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new150()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PPlanereference pplanereferenceNode2 = (PPlanereference)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pplanereferenceNode2 != null )
        {
            listNode3.add(pplanereferenceNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }

    private static int[][][] actionTable; /* = {
      {
        {-1, 3, 0},
        {8, 0, 1},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
        {38, 0, 7},
      },
      {
        {-1, 3, 1},
        {42, 0, 21},
      },
      {
        {-1, 3, 2},
        {42, 0, 22},
      },
      {
        {-1, 3, 3},
        {39, 0, 23},
      },
      {
        {-1, 3, 4},
        {39, 0, 24},
      },
      {
        {-1, 3, 5},
        {39, 0, 25},
      },
      {
        {-1, 3, 6},
        {39, 0, 26},
      },
      {
        {-1, 3, 7},
        {8, 0, 1},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 8},
        {49, 2, -1},
      },
      {
        {-1, 1, 149},
      },
      {
        {-1, 1, 0},
        {38, 0, 31},
      },
      {
        {-1, 1, 49},
      },
      {
        {-1, 1, 86},
      },
      {
        {-1, 1, 131},
      },
      {
        {-1, 1, 87},
      },
      {
        {-1, 1, 145},
      },
      {
        {-1, 1, 147},
      },
      {
        {-1, 1, 132},
      },
      {
        {-1, 3, 18},
        {8, 0, 1},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 19},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 20},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 21},
        {38, 0, 42},
      },
      {
        {-1, 3, 22},
        {38, 0, 43},
      },
      {
        {-1, 3, 23},
        {30, 0, 44},
      },
      {
        {-1, 3, 24},
        {22, 0, 45},
      },
      {
        {-1, 3, 25},
        {38, 0, 46},
      },
      {
        {-1, 3, 26},
        {38, 0, 47},
      },
      {
        {-1, 1, 3},
        {38, 0, 48},
      },
      {
        {-1, 3, 28},
        {8, 0, 1},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 29},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 30},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 24},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 6},
        {38, 0, 57},
      },
      {
        {-1, 1, 146},
      },
      {
        {-1, 3, 34},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 35},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 12},
        {38, 0, 62},
      },
      {
        {-1, 1, 148},
      },
      {
        {-1, 3, 38},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 150},
      },
      {
        {-1, 1, 1},
        {38, 0, 65},
      },
      {
        {-1, 3, 41},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 117},
      },
      {
        {-1, 1, 48},
      },
      {
        {-1, 3, 44},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 45},
        {2, 0, 100},
        {39, 0, 101},
      },
      {
        {-1, 1, 144},
      },
      {
        {-1, 1, 89},
      },
      {
        {-1, 1, 27},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 9},
        {38, 0, 104},
      },
      {
        {-1, 3, 50},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 3, 51},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 15},
        {38, 0, 109},
      },
      {
        {-1, 3, 53},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 4},
        {38, 0, 112},
      },
      {
        {-1, 3, 55},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 50},
      },
      {
        {-1, 1, 30},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 18},
        {38, 0, 114},
      },
      {
        {-1, 3, 59},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 7},
        {38, 0, 117},
      },
      {
        {-1, 3, 61},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 36},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 13},
        {38, 0, 119},
      },
      {
        {-1, 3, 64},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 25},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 2},
        {38, 0, 121},
      },
      {
        {-1, 3, 67},
        {39, 0, 122},
      },
      {
        {-1, 3, 68},
        {13, 0, 123},
        {22, 0, 70},
        {38, 0, 124},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
      },
      {
        {-1, 3, 69},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 70},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 71},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 131},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 72},
        {22, 0, 133},
        {39, 0, 24},
      },
      {
        {-1, 3, 73},
        {47, 0, 134},
      },
      {
        {-1, 1, 126},
      },
      {
        {-1, 1, 127},
      },
      {
        {-1, 1, 128},
      },
      {
        {-1, 1, 129},
      },
      {
        {-1, 3, 78},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 135},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
        {48, 0, 136},
      },
      {
        {-1, 1, 90},
        {0, 0, 139},
        {1, 0, 140},
      },
      {
        {-1, 1, 133},
      },
      {
        {-1, 1, 56},
      },
      {
        {-1, 1, 57},
      },
      {
        {-1, 1, 58},
      },
      {
        {-1, 1, 91},
      },
      {
        {-1, 1, 134},
      },
      {
        {-1, 1, 92},
      },
      {
        {-1, 1, 93},
      },
      {
        {-1, 1, 94},
      },
      {
        {-1, 1, 88},
      },
      {
        {-1, 1, 135},
      },
      {
        {-1, 1, 95},
      },
      {
        {-1, 1, 96},
      },
      {
        {-1, 1, 97},
      },
      {
        {-1, 1, 107},
        {15, 0, 141},
        {16, 0, 142},
      },
      {
        {-1, 1, 51},
      },
      {
        {-1, 1, 130},
      },
      {
        {-1, 1, 136},
      },
      {
        {-1, 1, 118},
        {3, 0, 145},
        {5, 0, 146},
        {7, 0, 147},
        {9, 0, 148},
        {10, 0, 149},
        {11, 0, 150},
        {17, 0, 151},
        {19, 0, 152},
        {22, 0, 153},
        {24, 0, 154},
        {25, 0, 155},
        {26, 0, 156},
        {27, 0, 157},
        {28, 0, 158},
        {33, 0, 159},
        {36, 0, 160},
      },
      {
        {-1, 1, 98},
      },
      {
        {-1, 3, 100},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 1, 121},
      },
      {
        {-1, 1, 122},
      },
      {
        {-1, 3, 103},
        {2, 0, 164},
        {37, 0, 165},
      },
      {
        {-1, 1, 33},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 21},
        {38, 0, 166},
      },
      {
        {-1, 3, 106},
        {12, 0, 2},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 10},
        {38, 0, 169},
      },
      {
        {-1, 3, 108},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 39},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 16},
        {38, 0, 171},
      },
      {
        {-1, 3, 111},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 28},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 5},
        {38, 0, 173},
      },
      {
        {-1, 1, 42},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 19},
        {38, 0, 174},
      },
      {
        {-1, 3, 116},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 31},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 8},
        {38, 0, 176},
      },
      {
        {-1, 1, 37},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 14},
        {38, 0, 177},
      },
      {
        {-1, 1, 26},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 3, 122},
        {14, 0, 178},
      },
      {
        {-1, 1, 59},
      },
      {
        {-1, 3, 124},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 3, 125},
        {13, 0, 180},
      },
      {
        {-1, 1, 61},
      },
      {
        {-1, 3, 127},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 1, 111},
        {3, 0, 145},
        {10, 0, 149},
        {11, 0, 150},
        {19, 0, 152},
        {22, 0, 153},
        {28, 0, 158},
        {33, 0, 159},
        {36, 0, 160},
      },
      {
        {-1, 1, 112},
      },
      {
        {-1, 3, 130},
        {2, 0, 182},
        {38, 0, 183},
      },
      {
        {-1, 1, 84},
        {22, 1, 126},
        {30, 0, 184},
        {36, 1, 126},
        {39, 1, 126},
      },
      {
        {-1, 3, 132},
        {22, 0, 153},
        {36, 0, 160},
        {39, 0, 185},
      },
      {
        {-1, 3, 133},
        {2, 0, 186},
      },
      {
        {-1, 3, 134},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 187},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
        {48, 0, 188},
      },
      {
        {-1, 3, 135},
        {47, 0, 134},
        {48, 0, 190},
      },
      {
        {-1, 1, 62},
      },
      {
        {-1, 3, 137},
        {38, 0, 191},
        {48, 0, 192},
      },
      {
        {-1, 1, 70},
      },
      {
        {-1, 3, 139},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 140},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 141},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 3, 142},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 108},
        {15, 0, 141},
        {16, 0, 198},
      },
      {
        {-1, 1, 109},
      },
      {
        {-1, 1, 138},
      },
      {
        {-1, 1, 76},
      },
      {
        {-1, 3, 147},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 75},
      },
      {
        {-1, 1, 141},
      },
      {
        {-1, 1, 143},
      },
      {
        {-1, 3, 151},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 142},
      },
      {
        {-1, 3, 153},
        {2, 0, 202},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 74},
      },
      {
        {-1, 1, 79},
      },
      {
        {-1, 1, 78},
      },
      {
        {-1, 1, 77},
      },
      {
        {-1, 1, 140},
      },
      {
        {-1, 1, 139},
      },
      {
        {-1, 3, 160},
        {39, 0, 205},
      },
      {
        {-1, 3, 161},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 162},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 105},
      },
      {
        {-1, 3, 164},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 3, 165},
        {39, 0, 101},
      },
      {
        {-1, 1, 45},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 22},
        {38, 0, 210},
      },
      {
        {-1, 3, 168},
        {18, 0, 3},
        {32, 0, 4},
        {34, 0, 5},
        {35, 0, 6},
      },
      {
        {-1, 1, 34},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 11},
        {38, 0, 212},
      },
      {
        {-1, 1, 40},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 17},
        {38, 0, 213},
      },
      {
        {-1, 1, 29},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 43},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 20},
        {38, 0, 214},
      },
      {
        {-1, 1, 32},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 38},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 3, 178},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 3, 179},
        {38, 0, 216},
      },
      {
        {-1, 1, 60},
      },
      {
        {-1, 1, 113},
      },
      {
        {-1, 1, 124},
      },
      {
        {-1, 3, 183},
        {2, 0, 217},
      },
      {
        {-1, 3, 184},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 85},
        {30, 0, 219},
      },
      {
        {-1, 3, 186},
        {6, 0, 220},
        {20, 0, 68},
        {23, 0, 221},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 3, 187},
        {47, 0, 134},
        {48, 0, 224},
      },
      {
        {-1, 1, 63},
      },
      {
        {-1, 3, 189},
        {38, 0, 225},
        {48, 0, 226},
      },
      {
        {-1, 1, 66},
      },
      {
        {-1, 3, 191},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
        {48, 0, 227},
      },
      {
        {-1, 1, 64},
      },
      {
        {-1, 1, 53},
      },
      {
        {-1, 1, 118},
        {7, 0, 147},
        {17, 0, 151},
        {22, 0, 153},
        {36, 0, 160},
      },
      {
        {-1, 1, 52},
      },
      {
        {-1, 1, 116},
      },
      {
        {-1, 3, 197},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 3, 198},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 110},
      },
      {
        {-1, 1, 119},
        {22, 0, 153},
        {36, 0, 160},
      },
      {
        {-1, 1, 120},
        {22, 0, 153},
        {36, 0, 160},
      },
      {
        {-1, 1, 80},
      },
      {
        {-1, 3, 203},
        {2, 0, 231},
        {37, 0, 232},
      },
      {
        {-1, 1, 54},
      },
      {
        {-1, 1, 99},
      },
      {
        {-1, 1, 73},
        {22, 0, 153},
        {36, 0, 160},
      },
      {
        {-1, 1, 137},
        {22, 0, 153},
        {36, 0, 160},
      },
      {
        {-1, 1, 106},
      },
      {
        {-1, 1, 123},
      },
      {
        {-1, 1, 46},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 23},
        {38, 0, 233},
      },
      {
        {-1, 1, 35},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 41},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 1, 44},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 3, 215},
        {22, 0, 153},
        {29, 0, 234},
        {36, 0, 160},
      },
      {
        {-1, 3, 216},
        {13, 0, 235},
      },
      {
        {-1, 1, 125},
      },
      {
        {-1, 1, 82},
      },
      {
        {-1, 3, 219},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 103},
      },
      {
        {-1, 1, 104},
      },
      {
        {-1, 1, 101},
      },
      {
        {-1, 3, 223},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 1, 67},
      },
      {
        {-1, 3, 225},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
        {48, 0, 238},
      },
      {
        {-1, 1, 65},
      },
      {
        {-1, 1, 68},
      },
      {
        {-1, 1, 71},
      },
      {
        {-1, 1, 114},
      },
      {
        {-1, 3, 230},
        {20, 0, 68},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 1, 81},
      },
      {
        {-1, 3, 232},
        {4, 0, 67},
        {18, 0, 3},
        {20, 0, 68},
        {21, 0, 69},
        {22, 0, 70},
        {31, 0, 71},
        {32, 0, 72},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 47},
        {18, 0, 3},
        {32, 0, 4},
      },
      {
        {-1, 3, 234},
        {20, 0, 68},
        {22, 0, 70},
        {38, 0, 73},
        {39, 0, 74},
        {40, 0, 75},
        {41, 0, 76},
        {42, 0, 77},
        {47, 0, 78},
      },
      {
        {-1, 1, 72},
      },
      {
        {-1, 1, 83},
      },
      {
        {-1, 1, 102},
      },
      {
        {-1, 1, 69},
      },
      {
        {-1, 1, 115},
      },
      {
        {-1, 1, 55},
      },
      {
        {-1, 3, 241},
        {20, 0, 68},
        {22, 0, 153},
        {36, 0, 160},
        {38, 0, 73},
        {47, 0, 78},
      },
      {
        {-1, 1, 100},
      },
    }; */

    private static int[][][] gotoTable; /* = {
      {
        {-1, 8},
      },
      {
        {-1, 9},
        {20, 39},
        {30, 39},
        {35, 39},
        {38, 39},
        {51, 39},
        {53, 39},
        {59, 39},
        {106, 39},
      },
      {
        {-1, 10},
        {7, 27},
        {18, 32},
        {19, 36},
        {20, 40},
        {28, 49},
        {29, 52},
        {30, 54},
        {34, 58},
        {35, 60},
        {38, 63},
        {41, 66},
        {50, 105},
        {51, 107},
        {53, 110},
        {55, 113},
        {59, 115},
        {61, 118},
        {64, 120},
        {106, 167},
        {108, 170},
        {111, 172},
        {116, 175},
        {168, 211},
      },
      {
        {-1, 79},
      },
      {
        {-1, 203},
      },
      {
        {-1, 80},
        {100, 163},
        {127, 181},
        {141, 196},
        {164, 208},
        {186, 222},
        {197, 229},
        {223, 237},
        {230, 239},
        {241, 242},
      },
      {
        {-1, 81},
      },
      {
        {-1, 125},
      },
      {
        {-1, 82},
        {124, 179},
      },
      {
        {-1, 137},
        {134, 189},
      },
      {
        {-1, 83},
      },
      {
        {-1, 84},
      },
      {
        {-1, 161},
      },
      {
        {-1, 85},
      },
      {
        {-1, 86},
      },
      {
        {-1, 87},
      },
      {
        {-1, 11},
        {31, 56},
        {44, 88},
        {48, 56},
        {57, 56},
        {62, 56},
        {65, 56},
        {70, 88},
        {78, 88},
        {104, 56},
        {109, 56},
        {112, 56},
        {114, 56},
        {117, 56},
        {119, 56},
        {121, 56},
        {134, 88},
        {153, 88},
        {166, 56},
        {169, 56},
        {171, 56},
        {173, 56},
        {174, 56},
        {176, 56},
        {177, 56},
        {184, 88},
        {191, 88},
        {210, 56},
        {212, 56},
        {213, 56},
        {214, 56},
        {219, 88},
        {225, 88},
        {232, 88},
        {233, 56},
      },
      {
        {-1, 12},
      },
      {
        {-1, 13},
      },
      {
        {-1, 138},
        {44, 89},
        {70, 130},
        {153, 204},
        {184, 218},
        {191, 228},
        {219, 236},
        {225, 228},
        {232, 240},
      },
      {
        {-1, 90},
      },
      {
        {-1, 91},
      },
      {
        {-1, 92},
      },
      {
        {-1, 223},
      },
      {
        {-1, 14},
      },
      {
        {-1, 93},
      },
      {
        {-1, 127},
        {142, 197},
        {198, 230},
      },
      {
        {-1, 94},
      },
      {
        {-1, 143},
      },
      {
        {-1, 144},
        {143, 199},
      },
      {
        {-1, 15},
        {18, 33},
        {28, 33},
      },
      {
        {-1, 95},
        {139, 193},
        {140, 195},
      },
      {
        {-1, 102},
        {165, 209},
      },
      {
        {-1, 103},
      },
      {
        {-1, 96},
      },
      {
        {-1, 97},
        {68, 126},
      },
      {
        {-1, 16},
        {19, 37},
        {29, 37},
        {34, 37},
        {41, 37},
        {50, 37},
        {55, 37},
        {61, 37},
        {64, 37},
        {108, 37},
        {111, 37},
        {116, 37},
        {168, 37},
      },
      {
        {-1, 98},
        {69, 128},
        {71, 132},
        {139, 194},
        {140, 194},
        {142, 128},
        {147, 200},
        {151, 201},
        {161, 206},
        {162, 207},
        {178, 215},
        {198, 128},
        {234, 241},
      },
      {
        {-1, 99},
        {69, 129},
        {142, 129},
        {198, 129},
      },
      {
        {-1, 162},
      },
      {
        {-1, 17},
      },
      {
        {-1, 18},
        {7, 28},
      },
      {
        {-1, 19},
        {7, 29},
        {18, 34},
        {20, 41},
        {28, 50},
        {30, 55},
        {35, 61},
        {38, 64},
        {51, 108},
        {53, 111},
        {59, 116},
        {106, 168},
      },
      {
        {-1, 20},
        {7, 30},
        {18, 35},
        {19, 38},
        {28, 51},
        {29, 53},
        {34, 59},
        {50, 106},
      },
    };
    */
    private static String[] errorMessages; /* = {
      "expecting: 'import', 'plane', 'declfirst', 'func', 'using', 'expose', newline",
      "expecting: string",
      "expecting: identifier",
      "expecting: 'import', 'plane', 'declfirst', 'func', 'using', 'expose'",
      "expecting: EOF",
      "expecting: 'plane', 'declfirst', 'func', 'using', 'expose'",
      "expecting: newline, EOF",
      "expecting: ')', ',', newline, 'xxxIndentClose', EOF",
      "expecting: newline",
      "expecting: '='",
      "expecting: '('",
      "expecting: 'declfirst', 'func', EOF",
      "expecting: 'declfirst', 'func', 'using', 'expose'",
      "expecting: 'for', 'declfirst', '{', 'if', '(', 'decl', 'func', newline, identifier, integer, rational, string, 'xxxIndentOpen'",
      "expecting: ')', identifier",
      "expecting: '}', '(', newline, identifier, integer, rational, string",
      "expecting: '{', '(', newline, identifier, integer, rational, string, 'xxxIndentOpen'",
      "expecting: '(', identifier",
      "expecting: 'xxxIndentOpen'",
      "expecting: '-', '+', ')', 'lt', 'or', '*', 'nand', 'gte', 'dne', '}', '/', 'gt', '{', '(', 'and', 'xnor', 'xor', 'nor', 'eql', 'to', 'lte', '.', ',', newline, 'xxxIndentOpen', 'xxxIndentClose', EOF",
      "expecting: '-', '+', ')', 'lt', 'or', '*', 'nand', 'gte', 'dne', '}', '/', 'gt', '{', '(', 'and', 'xnor', 'xor', 'nor', 'eql', 'to', 'lte', '.', ',', newline, identifier, 'xxxIndentOpen', 'xxxIndentClose', EOF",
      "expecting: 'for', 'declfirst', '{', 'if', '(', 'decl', 'func', newline, identifier, integer, rational, string, 'xxxIndentOpen', 'xxxIndentClose'",
      "expecting: '-', '+', ')', ',', newline, 'xxxIndentClose', EOF",
      "expecting: '-', '+', ')', 'lt', 'or', '*', 'nand', 'gte', 'dne', '/', 'gt', '{', '(', 'and', 'xnor', 'xor', 'nor', 'eql', 'to', 'lte', '.', ',', newline, identifier, 'xxxIndentOpen', 'xxxIndentClose', EOF",
      "expecting: '-', '+', ')', 'lt', 'or', '*', 'nand', 'gte', 'dne', 'else', 'elif', '/', 'gt', '{', '(', 'and', 'xnor', 'xor', 'nor', 'eql', 'to', 'lte', '.', ',', newline, identifier, 'xxxIndentOpen', 'xxxIndentClose', EOF",
      "expecting: ')', 'else', 'elif', ',', newline, 'xxxIndentClose', EOF",
      "expecting: '-', '+', ')', 'lt', 'or', '*', 'nand', 'gte', 'dne', '/', 'gt', '(', 'and', 'xnor', 'xor', 'nor', 'eql', 'lte', '.', ',', newline, 'xxxIndentClose', EOF",
      "expecting: '{', newline, 'xxxIndentOpen'",
      "expecting: ')', ','",
      "expecting: 'from'",
      "expecting: newline, 'xxxIndentOpen'",
      "expecting: '}'",
      "expecting: 'lt', 'gte', 'dne', 'gt', '{', '(', 'eql', 'lte', '.', newline, 'xxxIndentOpen'",
      "expecting: ')', newline",
      "expecting: ')', '(', '=', '.', ',', newline, identifier, 'xxxIndentClose', EOF",
      "expecting: '(', '.', identifier",
      "expecting: ')'",
      "expecting: 'xxxIndentOpen', 'xxxIndentClose'",
      "expecting: newline, 'xxxIndentClose'",
      "expecting: ')', 'for', 'declfirst', '{', 'if', '(', 'decl', 'func', newline, identifier, integer, rational, string, 'xxxIndentOpen'",
      "expecting: ')', '=', ',', newline, 'xxxIndentClose', EOF",
      "expecting: 'dyn', '{', 'void', newline, 'xxxIndentOpen'",
      "expecting: '-', '+', ')', '*', '/', '(', '.', ',', newline, 'xxxIndentClose', EOF",
      "expecting: '-', '+', ')', '(', '.', ',', newline, 'xxxIndentClose', EOF",
      "expecting: ')', '(', '.', ',', newline, 'xxxIndentClose', EOF",
      "expecting: ')', '{', '(', '.', ',', newline, 'xxxIndentOpen', 'xxxIndentClose', EOF",
      "expecting: '(', 'to', '.'",
      "expecting: '{', '(', '.', newline, 'xxxIndentOpen'",
    };
    */
    private static int[] errors; /* = {
0, 1, 1, 2, 2, 2, 2, 3, 4, 5, 6, 6, 7, 5, 7, 3, 5, 5, 3, 5, 5, 8, 8, 9, 10, 8, 8, 6, 3, 5, 5, 11, 6, 3, 5, 5, 6, 5, 5, 5, 6, 12, 3, 5, 13, 14, 5, 5, 11, 6, 5, 5, 6, 5, 6, 12, 6, 11, 6, 5, 6, 12, 11, 6, 12, 11, 6, 2, 15, 16, 13, 16, 17, 18, 19, 20, 20, 20, 21, 22, 23, 24, 24, 24, 7, 23, 7, 7, 7, 7, 23, 7, 7, 7, 25, 22, 20, 23, 26, 7, 27, 28, 28, 28, 11, 6, 5, 6, 12, 11, 6, 12, 11, 6, 11, 6, 12, 11, 6, 11, 6, 11, 29, 24, 30, 31, 31, 27, 32, 27, 33, 34, 35, 36, 21, 37, 24, 38, 38, 16, 16, 27, 16, 25, 7, 16, 16, 16, 16, 16, 16, 16, 16, 39, 16, 16, 16, 16, 16, 16, 2, 16, 16, 7, 27, 2, 11, 6, 12, 11, 6, 11, 6, 11, 11, 6, 11, 11, 16, 8, 24, 25, 20, 36, 13, 40, 41, 37, 24, 38, 24, 21, 24, 22, 42, 22, 7, 27, 16, 7, 43, 43, 23, 28, 28, 23, 44, 45, 7, 28, 11, 6, 11, 11, 11, 46, 31, 20, 7, 13, 27, 27, 7, 27, 24, 21, 24, 24, 38, 25, 27, 23, 13, 11, 16, 24, 7, 7, 24, 25, 28, 47, 7, 

    };
    */

    static
    {
        try
        {
            BufferedReader r = new BufferedReader (new InputStreamReader (
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = Integer.parseInt(r.readLine());
            actionTable = new int[length][][];
            for(int i = 0; i < actionTable.length; i++)
            {
                length = Integer.parseInt(r.readLine());
                actionTable[i] = new int[length][3];
                for(int j = 0; j < actionTable[i].length; j++)
                {
                    for(int k = 0; k < 3; k++)
                    {
                        actionTable[i][j][k] = Integer.parseInt(r.readLine());
                    }
                }
            }

            // read gotoTable
            length = Integer.parseInt(r.readLine());
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = Integer.parseInt(r.readLine());
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    for(int k = 0; k < 2; k++)
                    {
                        gotoTable[i][j][k] = Integer.parseInt(r.readLine());
                    }
                }
            }

            // read errorMessages
            length = Integer.parseInt(r.readLine());
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                errorMessages[i] = unescape(r.readLine());
            }

            // read errors
            length = Integer.parseInt(r.readLine());
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = Integer.parseInt(r.readLine());
            }

            r.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }

    private static String unescape (String str)
    {
      StringBuffer out = new StringBuffer ();
      for ( int i = 0; i < str.length(); i++ )
        {
          char c = str.charAt(i);

          switch (c)
          {
            case '\\':
              if ( i + 1 < str.length() )
              {
                i++;
                switch (str.charAt(i))
                  {
                    case 'n':
                      out.append ("\n");
                      break;
                    case 'r':
                      out.append ("\r");
                      break;
                    case '"':
                      out.append ("\"");
                      break;
                    case '\\':
                      out.append ("\\");
                      break;
                    case '0':
                      if ( str.substring(i).startsWith ("000") )
                        {
                          out.append ("\000");
                          i += 2;
                        }
                      else
                        {
                          out.append ("\\");
                          out.append (str.charAt(i));
                        }
                      break;
                    case 'u':
                      String hstr = str.substring(i, i + 4);
                      if ( hstr.length() == 4 )
                        {
                          try
                          {
                            out.append ((char)Integer.parseInt(hstr, 16));
                            i += 4;
                          } catch (NumberFormatException ex)
                          {
                            out.append ("\\");
                            out.append (str.charAt(i));
                          }
                        }
                      else
                        {
                          out.append ("\\");
                          out.append (str.charAt(i));
                        }
                      break;
                    default:
                      out.append ("\\");
                      out.append (str.charAt(i));
                      break;
                  }
              }
              else
              {
                out.append (c);
              }

              break;
            default:
              out.append (c);
              break;
          }
        }
      return out.toString();
    }
}

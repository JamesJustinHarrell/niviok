/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class ABDeclarefirst extends PDeclarefirst
{
    private PFunctiondeclaration _functiondeclaration_;

    public ABDeclarefirst ()
    {
    }

    public ABDeclarefirst (
            PFunctiondeclaration _functiondeclaration_
    )
    {
        setFunctiondeclaration (_functiondeclaration_);
    }

    public Object clone()
    {
        return new ABDeclarefirst (
            (PFunctiondeclaration)cloneNode (_functiondeclaration_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABDeclarefirst(this);
    }

    public PFunctiondeclaration getFunctiondeclaration ()
    {
        return _functiondeclaration_;
    }

    public void setFunctiondeclaration (PFunctiondeclaration node)
    {
        if(_functiondeclaration_ != null)
        {
            _functiondeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _functiondeclaration_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_functiondeclaration_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _functiondeclaration_ == child )
        {
            _functiondeclaration_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _functiondeclaration_ == oldChild )
        {
            setFunctiondeclaration ((PFunctiondeclaration) newChild);
            return;
        }
    }

}

/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class ACExpression extends PExpression
{
    private PDeclareassign _declareassign_;

    public ACExpression ()
    {
    }

    public ACExpression (
            PDeclareassign _declareassign_
    )
    {
        setDeclareassign (_declareassign_);
    }

    public Object clone()
    {
        return new ACExpression (
            (PDeclareassign)cloneNode (_declareassign_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACExpression(this);
    }

    public PDeclareassign getDeclareassign ()
    {
        return _declareassign_;
    }

    public void setDeclareassign (PDeclareassign node)
    {
        if(_declareassign_ != null)
        {
            _declareassign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _declareassign_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_declareassign_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _declareassign_ == child )
        {
            _declareassign_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _declareassign_ == oldChild )
        {
            setDeclareassign ((PDeclareassign) newChild);
            return;
        }
    }

}

/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class ABTabblockinside extends PTabblockinside
{
    private PTabblockinside _tabblockinside_;
    private TNewline _newline_;
    private PExpression _expression_;

    public ABTabblockinside ()
    {
    }

    public ABTabblockinside (
            PTabblockinside _tabblockinside_,
            TNewline _newline_,
            PExpression _expression_
    )
    {
        setTabblockinside (_tabblockinside_);
        setNewline (_newline_);
        setExpression (_expression_);
    }

    public Object clone()
    {
        return new ABTabblockinside (
            (PTabblockinside)cloneNode (_tabblockinside_),
            (TNewline)cloneNode (_newline_),
            (PExpression)cloneNode (_expression_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABTabblockinside(this);
    }

    public PTabblockinside getTabblockinside ()
    {
        return _tabblockinside_;
    }

    public void setTabblockinside (PTabblockinside node)
    {
        if(_tabblockinside_ != null)
        {
            _tabblockinside_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tabblockinside_ = node;
    }
    public TNewline getNewline ()
    {
        return _newline_;
    }

    public void setNewline (TNewline node)
    {
        if(_newline_ != null)
        {
            _newline_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _newline_ = node;
    }
    public PExpression getExpression ()
    {
        return _expression_;
    }

    public void setExpression (PExpression node)
    {
        if(_expression_ != null)
        {
            _expression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expression_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_tabblockinside_)
            + toString (_newline_)
            + toString (_expression_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _tabblockinside_ == child )
        {
            _tabblockinside_ = null;
            return;
        }
        if ( _newline_ == child )
        {
            _newline_ = null;
            return;
        }
        if ( _expression_ == child )
        {
            _expression_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _tabblockinside_ == oldChild )
        {
            setTabblockinside ((PTabblockinside) newChild);
            return;
        }
        if ( _newline_ == oldChild )
        {
            setNewline ((TNewline) newChild);
            return;
        }
        if ( _expression_ == oldChild )
        {
            setExpression ((PExpression) newChild);
            return;
        }
    }

}

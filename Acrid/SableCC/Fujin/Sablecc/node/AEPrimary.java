/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class AEPrimary extends PPrimary
{
    private PParenthetical _parenthetical_;

    public AEPrimary ()
    {
    }

    public AEPrimary (
            PParenthetical _parenthetical_
    )
    {
        setParenthetical (_parenthetical_);
    }

    public Object clone()
    {
        return new AEPrimary (
            (PParenthetical)cloneNode (_parenthetical_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEPrimary(this);
    }

    public PParenthetical getParenthetical ()
    {
        return _parenthetical_;
    }

    public void setParenthetical (PParenthetical node)
    {
        if(_parenthetical_ != null)
        {
            _parenthetical_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _parenthetical_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_parenthetical_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _parenthetical_ == child )
        {
            _parenthetical_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _parenthetical_ == oldChild )
        {
            setParenthetical ((PParenthetical) newChild);
            return;
        }
    }

}

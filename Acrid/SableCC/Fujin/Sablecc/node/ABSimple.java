/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class ABSimple extends PSimple
{
    private PCall _call_;

    public ABSimple ()
    {
    }

    public ABSimple (
            PCall _call_
    )
    {
        setCall (_call_);
    }

    public Object clone()
    {
        return new ABSimple (
            (PCall)cloneNode (_call_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABSimple(this);
    }

    public PCall getCall ()
    {
        return _call_;
    }

    public void setCall (PCall node)
    {
        if(_call_ != null)
        {
            _call_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _call_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_call_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _call_ == child )
        {
            _call_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _call_ == oldChild )
        {
            setCall ((PCall) newChild);
            return;
        }
    }

}

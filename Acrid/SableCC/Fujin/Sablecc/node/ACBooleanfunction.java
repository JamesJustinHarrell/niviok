/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class ACBooleanfunction extends PBooleanfunction
{
    private TKeywordOr _keyword_or_;

    public ACBooleanfunction ()
    {
    }

    public ACBooleanfunction (
            TKeywordOr _keyword_or_
    )
    {
        setKeywordOr (_keyword_or_);
    }

    public Object clone()
    {
        return new ACBooleanfunction (
            (TKeywordOr)cloneNode (_keyword_or_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACBooleanfunction(this);
    }

    public TKeywordOr getKeywordOr ()
    {
        return _keyword_or_;
    }

    public void setKeywordOr (TKeywordOr node)
    {
        if(_keyword_or_ != null)
        {
            _keyword_or_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _keyword_or_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_keyword_or_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _keyword_or_ == child )
        {
            _keyword_or_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _keyword_or_ == oldChild )
        {
            setKeywordOr ((TKeywordOr) newChild);
            return;
        }
    }

}

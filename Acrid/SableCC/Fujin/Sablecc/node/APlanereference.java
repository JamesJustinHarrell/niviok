/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class APlanereference extends PPlanereference
{
    private TKeywordPlane _keyword_plane_;
    private TString _string_;
    private TNewline _newline_;

    public APlanereference ()
    {
    }

    public APlanereference (
            TKeywordPlane _keyword_plane_,
            TString _string_,
            TNewline _newline_
    )
    {
        setKeywordPlane (_keyword_plane_);
        setString (_string_);
        setNewline (_newline_);
    }

    public Object clone()
    {
        return new APlanereference (
            (TKeywordPlane)cloneNode (_keyword_plane_),
            (TString)cloneNode (_string_),
            (TNewline)cloneNode (_newline_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlanereference(this);
    }

    public TKeywordPlane getKeywordPlane ()
    {
        return _keyword_plane_;
    }

    public void setKeywordPlane (TKeywordPlane node)
    {
        if(_keyword_plane_ != null)
        {
            _keyword_plane_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _keyword_plane_ = node;
    }
    public TString getString ()
    {
        return _string_;
    }

    public void setString (TString node)
    {
        if(_string_ != null)
        {
            _string_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _string_ = node;
    }
    public TNewline getNewline ()
    {
        return _newline_;
    }

    public void setNewline (TNewline node)
    {
        if(_newline_ != null)
        {
            _newline_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _newline_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_keyword_plane_)
            + toString (_string_)
            + toString (_newline_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _keyword_plane_ == child )
        {
            _keyword_plane_ = null;
            return;
        }
        if ( _string_ == child )
        {
            _string_ = null;
            return;
        }
        if ( _newline_ == child )
        {
            _newline_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _keyword_plane_ == oldChild )
        {
            setKeywordPlane ((TKeywordPlane) newChild);
            return;
        }
        if ( _string_ == oldChild )
        {
            setString ((TString) newChild);
            return;
        }
        if ( _newline_ == oldChild )
        {
            setNewline ((TNewline) newChild);
            return;
        }
    }

}

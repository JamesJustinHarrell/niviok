/* This file was generated by SableCC (http://www.sablecc.org/). */

package Dextr.Sablecc.node;

import java.util.*;
import Dextr.Sablecc.analysis.*;

public final class ABDeclarefirstlist extends PDeclarefirstlist
{
    private PDeclarefirstlist _declarefirstlist_;
    private TNewline _newline_;
    private PDeclarefirst _declarefirst_;

    public ABDeclarefirstlist ()
    {
    }

    public ABDeclarefirstlist (
            PDeclarefirstlist _declarefirstlist_,
            TNewline _newline_,
            PDeclarefirst _declarefirst_
    )
    {
        setDeclarefirstlist (_declarefirstlist_);
        setNewline (_newline_);
        setDeclarefirst (_declarefirst_);
    }

    public Object clone()
    {
        return new ABDeclarefirstlist (
            (PDeclarefirstlist)cloneNode (_declarefirstlist_),
            (TNewline)cloneNode (_newline_),
            (PDeclarefirst)cloneNode (_declarefirst_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABDeclarefirstlist(this);
    }

    public PDeclarefirstlist getDeclarefirstlist ()
    {
        return _declarefirstlist_;
    }

    public void setDeclarefirstlist (PDeclarefirstlist node)
    {
        if(_declarefirstlist_ != null)
        {
            _declarefirstlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _declarefirstlist_ = node;
    }
    public TNewline getNewline ()
    {
        return _newline_;
    }

    public void setNewline (TNewline node)
    {
        if(_newline_ != null)
        {
            _newline_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _newline_ = node;
    }
    public PDeclarefirst getDeclarefirst ()
    {
        return _declarefirst_;
    }

    public void setDeclarefirst (PDeclarefirst node)
    {
        if(_declarefirst_ != null)
        {
            _declarefirst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _declarefirst_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_declarefirstlist_)
            + toString (_newline_)
            + toString (_declarefirst_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _declarefirstlist_ == child )
        {
            _declarefirstlist_ = null;
            return;
        }
        if ( _newline_ == child )
        {
            _newline_ = null;
            return;
        }
        if ( _declarefirst_ == child )
        {
            _declarefirst_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _declarefirstlist_ == oldChild )
        {
            setDeclarefirstlist ((PDeclarefirstlist) newChild);
            return;
        }
        if ( _newline_ == oldChild )
        {
            setNewline ((TNewline) newChild);
            return;
        }
        if ( _declarefirst_ == oldChild )
        {
            setDeclarefirst ((PDeclarefirst) newChild);
            return;
        }
    }

}
